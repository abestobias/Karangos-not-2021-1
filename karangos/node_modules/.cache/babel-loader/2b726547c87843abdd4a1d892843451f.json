{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Checkbox } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  form: {\n    maxWidth: '80%',\n    margin: '0 auto',\n    display: \"flex\",\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      marginBottom: '24px'\n    }\n  },\n  toolbar: {\n    marginTop: '36px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'spacearound'\n  },\n  checkbox: {\n    alignItems: 'center'\n  }\n}));\n/* Classes de caracteres de entrada para a mascara do compo placa \n1 As tres primeiras posições qualquer letra de A a Z ( maiusculo ou minisculo) [A-za-z]\n2 Posicoes numnericas 1ª 3ª 4ª depois do traço [0-9]\n3 2ª posição apos o traco : pode receber digitos ou letras de A - J (maiusculas ou minusculas) [0-9A-Ja-a]\n*/\n//Representando as classes de caracteres da mascara como um objeto \n\nconst formatChars = {\n  'A': '[A-Za-z]',\n  '0': '[0-9]',\n  '#': '[0-9A-Ja-j]'\n}; //finalmente a mascara de entrada \n\nconst placaMask = 'AAA-0#00';\nexport default function KarangosForm() {\n  _s();\n\n  const classes = useStyles();\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    importado: '0',\n    placa: '',\n    preco: 0\n  });\n  const [currentId, setCurentId] = useState();\n  const [importadoChecked, setImportadoChecked] = useState();\n\n  function handleInputChange(event, property) {\n    // Se nao houver id no event.target, ele será o nome da propriedade\n    // senão, usaremos o valor do segundo parametro\n    if (event.target.id) property = event.target.id;\n\n    if (property === 'importado') {\n      const newState = !importadoChecked;\n      setKarango({ ...karango,\n        importado: newState ? '1' : '0'\n      });\n      setImportadoChecked(newState);\n    } else if (property === 'placa') {\n      setKarango({ ...karango,\n        [property]: event.target.value.toUpperCase()\n      });\n    } else {\n      // Quando o nome de uma propriedade de um objeto aparece entre [],\n      // isso se chama \"propriedade calculada\". O nome da propriedade vai\n      // corresponder a avaliação da expressão entre os colchetes\n      setCurentId(event.target.id);\n      setKarango({ ...karango,\n        [property]: event.target.value\n      });\n    }\n  } // function handleCorChange(event) {\n  //     setKarango({...karango, cor:event.target.value})\n  // }\n  // function handleAnoChange(event) {\n  //     setKarango({...karango, ano_fabricacao:event.target.value})\n  // }\n\n\n  function years() {\n    let result = [];\n\n    for (let i = new Date().getFullYear(); i >= 1900; i--) {\n      result.push(i);\n    }\n\n    return result;\n  }\n\n  async function saData() {\n    try {\n      await axios.post('https://api.faustocintra.com.br/karangos', karango);\n      alert('Dados salvos com sucesso !');\n    } catch (error) {\n      alert('ERRO:' + error.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackState.open,\n      autoHideDuration: 6000,\n      onClose: handleSnackClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackClose,\n        severity: snackState.severity,\n        children: snackState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar novo karango\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: karango.marca,\n        onChange: handleInputChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: karango.modelo,\n        onChange: handleInputChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        select: true,\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Amarelo\",\n          children: \"Amarelo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Azul\",\n          children: \"Azul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Branco\",\n          children: \"Branco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Cinza\",\n          children: \"Cinza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Dourado\",\n          children: \"Dourado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Laranja\",\n          children: \"Laranja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Prata\",\n          children: \"Prata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Preto\",\n          children: \"Preto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Roxo\",\n          children: \"Roxo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Verde\",\n          children: \"Verde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Vermelho\",\n          children: \"Vermelho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano\",\n        variant: \"filled\",\n        value: karango.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        select: true,\n        fullWidth: true,\n        children: years().map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"preco\",\n          label: \"Pre\\xE7o \",\n          variant: \"filled\",\n          value: karango.preco,\n          onChange: handleInputChange,\n          fullWidth: true,\n          type: \"number\",\n          onFocus: event => event.target.select(),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: \"R$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 45\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n          formatChars: formatChars,\n          mask: placaMask,\n          id: \"placa\",\n          onChange: event => handleInputChange(event, 'placa'),\n          value: karango.placa,\n          children: () => /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"placa\",\n            variant: \"filled\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          className: classes.checkbox,\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: importadoChecked,\n            onChange: handleInputChange,\n            id: \"importado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 34\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secundary\",\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [JSON.stringify(karango), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), \"currentId:\", currentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"CKHnpuV1z6jQWeXzQXft7foTxOE=\", false, function () {\n  return [useStyles];\n});\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js"],"names":["useState","TextField","MenuItem","makeStyles","Button","Checkbox","FormControl","FormControlLabel","InputMask","InputAdornment","Toolbar","axios","useStyles","form","maxWidth","margin","display","justifyContent","flexWrap","minWidth","marginBottom","toolbar","marginTop","width","checkbox","alignItems","formatChars","placaMask","KarangosForm","classes","karango","setKarango","id","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","currentId","setCurentId","importadoChecked","setImportadoChecked","handleInputChange","event","property","target","newState","value","toUpperCase","years","result","i","push","saData","post","alert","error","message","snackState","open","handleSnackClose","severity","map","year","select","startAdornment","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Checkbox } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputMask from 'react-input-mask'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport axios from 'axios'\n\n\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: \"flex\",\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px',\n        }\n    },\n\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'spacearound'\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n/* Classes de caracteres de entrada para a mascara do compo placa \n1 As tres primeiras posições qualquer letra de A a Z ( maiusculo ou minisculo) [A-za-z]\n2 Posicoes numnericas 1ª 3ª 4ª depois do traço [0-9]\n3 2ª posição apos o traco : pode receber digitos ou letras de A - J (maiusculas ou minusculas) [0-9A-Ja-a]\n*/\n\n//Representando as classes de caracteres da mascara como um objeto \n\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\n//finalmente a mascara de entrada \nconst placaMask = 'AAA-0#00'\n\nexport default function KarangosForm() {\n\n    const classes = useStyles()\n\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(),\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n\n    const [currentId, setCurentId] = useState()\n    const [importadoChecked, setImportadoChecked] = useState()\n\n    function handleInputChange(event, property) {\n        // Se nao houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parametro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'importado') {\n            const newState = !importadoChecked\n            setKarango({ ...karango, importado: (newState ? '1' : '0') })\n            setImportadoChecked(newState)\n        }\n\n        else if (property === 'placa') {\n            setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n        }\n        else {\n            // Quando o nome de uma propriedade de um objeto aparece entre [],\n            // isso se chama \"propriedade calculada\". O nome da propriedade vai\n            // corresponder a avaliação da expressão entre os colchetes\n            setCurentId(event.target.id)\n            setKarango({ ...karango, [property]: event.target.value })\n        }\n    }\n\n    // function handleCorChange(event) {\n    //     setKarango({...karango, cor:event.target.value})\n    // }\n\n    // function handleAnoChange(event) {\n    //     setKarango({...karango, ano_fabricacao:event.target.value})\n    // }\n\n    function years() {\n        let result = []\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) {\n            result.push(i)\n        }\n        return result\n    }\n\n    async function saData() {\n        try {\n            await axios.post('https://api.faustocintra.com.br/karangos', karango)\n            alert('Dados salvos com sucesso !')\n        }\n        catch (error) {\n            alert('ERRO:' + error.message)\n        }\n    }\n\n    return (\n        <>\n\n            <Snackbar open={snackState.open} autoHideDuration={6000} onClose={handleSnackClose}>\n                <Alert onClose={handleSnackClose} severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n\n\n\n            <h1>Cadastrar novo karango</h1>\n            <form className={classes.form}>\n\n                <TextField id=\"marca\" label=\"Marca\"\n                    variant=\"filled\" value={karango.marca} onChange={handleInputChange} fullWidth />\n\n                <TextField id=\"modelo\" label=\"Modelo\"\n                    variant=\"filled\" value={karango.modelo} onChange={handleInputChange} fullWidth />\n\n                <TextField id=\"cor\" label=\"Cor\"\n                    variant=\"filled\" value={karango.cor} onChange={event => handleInputChange(event, 'cor')} select fullWidth >\n                    <MenuItem value='Amarelo'>Amarelo</MenuItem>\n                    <MenuItem value='Azul'>Azul</MenuItem>\n                    <MenuItem value='Branco'>Branco</MenuItem>\n                    <MenuItem value='Cinza'>Cinza</MenuItem>\n                    <MenuItem value='Dourado'>Dourado</MenuItem>\n                    <MenuItem value='Laranja'>Laranja</MenuItem>\n                    <MenuItem value='Prata'>Prata</MenuItem>\n                    <MenuItem value='Preto'>Preto</MenuItem>\n                    <MenuItem value='Roxo'>Roxo</MenuItem>\n                    <MenuItem value='Verde'>Verde</MenuItem>\n                    <MenuItem value='Vermelho'>Vermelho</MenuItem>\n                </TextField>\n\n\n                <TextField\n                    id=\"ano_fabricacao\"\n                    label=\"Ano\"\n                    variant=\"filled\"\n                    value={karango.ano_fabricacao}\n                    onChange={event => handleInputChange(event, 'ano_fabricacao')}\n                    select\n                    fullWidth\n                >\n                    {\n                        years().map(year => <MenuItem value={year}>{year}</MenuItem>)\n                    }\n                </TextField>\n\n\n                <FormControl fullWidth>\n\n                    <TextField id=\"preco\" label=\"Preço \"\n                        variant=\"filled\" value={karango.preco} onChange={handleInputChange} fullWidth type=\"number\"\n                        onFocus={event => event.target.select()}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                        }}\n                    />\n\n\n                    <InputMask formatChars={formatChars} mask={placaMask} id=\"placa\"\n                        onChange={event => handleInputChange(event, 'placa')}\n                        value={karango.placa}>\n                        {() => <TextField label=\"placa\"\n                            variant=\"filled\" fullWidth />}\n                    </InputMask>\n\n\n                    <FormControlLabel className={classes.checkbox}\n                        control={<Checkbox checked={importadoChecked} onChange={handleInputChange} id=\"importado\" />}\n                        label=\"Importado?\"\n                    />\n\n                </FormControl>\n\n                <Toolbar className={classes.toolbar}>\n                    <Button variant=\"contained\" color=\"secundary\" type=\"submit\" >Enviar</Button>\n                    <Button variant=\"contained\">Voltar</Button>\n\n                </Toolbar>\n\n            </form>\n            <div>{JSON.stringify(karango)}\n\n                <br />\n                currentId:{currentId}\n\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}