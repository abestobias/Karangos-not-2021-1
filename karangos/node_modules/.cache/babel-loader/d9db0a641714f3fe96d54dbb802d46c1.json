{"ast":null,"code":"import React from'react';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ConfirmDialog(_ref){var _ref$title=_ref.title,title=_ref$title===void 0?'Alerta':_ref$title,_ref$isOpen=_ref.isOpen,isOpen=_ref$isOpen===void 0?false:_ref$isOpen,onClose=_ref.onClose,children=_ref.children;/*\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  */var handleClose=function handleClose(result){// Só chama a função onClose se a prop correspondente tiver sido passada\nif(onClose)onClose(result);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Dialog,{open:isOpen,onClose:function onClose(){return handleClose(false);},\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",children:title}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-description\",children:children})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handleClose(true);},color:\"primary\",children:\"Ok\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handleClose(false);},color:\"primary\",autoFocus:true,children:\"Cancelar\"})]})]})});}","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/src/ui/ConfirmDialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ConfirmDialog","title","isOpen","onClose","children","handleClose","result"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,C,wFAEA,cAAe,SAASC,CAAAA,aAAT,MAAgF,qBAAvDC,KAAuD,CAAvDA,KAAuD,qBAA/C,QAA+C,6BAArCC,MAAqC,CAArCA,MAAqC,sBAA5B,KAA4B,aAArBC,OAAqB,MAArBA,OAAqB,CAAZC,QAAY,MAAZA,QAAY,CAC7F;AACF;AACA;AACA;AACA;AACA;AACA,IAEE,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC9B;AACA,GAAIH,OAAJ,CAAaA,OAAO,CAACG,MAAD,CAAP,CACd,CAHD,CAKA,mBACE,kCAIE,MAAC,MAAD,EACE,IAAI,CAAEJ,MADR,CAEE,OAAO,CAAE,yBAAMG,CAAAA,WAAW,CAAC,KAAD,CAAjB,EAFX,CAGE,kBAAgB,oBAHlB,CAIE,mBAAiB,0BAJnB,wBAME,KAAC,WAAD,EAAa,EAAE,CAAC,oBAAhB,UAAsCJ,KAAtC,EANF,cAOE,KAAC,aAAD,wBACE,KAAC,iBAAD,EAAmB,EAAE,CAAC,0BAAtB,UACEG,QADF,EADF,EAPF,cAYE,MAAC,aAAD,yBACE,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAAC,IAAD,CAAjB,EAAjB,CAA0C,KAAK,CAAC,SAAhD,gBADF,cAIE,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMA,CAAAA,WAAW,CAAC,KAAD,CAAjB,EAAjB,CAA2C,KAAK,CAAC,SAAjD,CAA2D,SAAS,KAApE,sBAJF,GAZF,GAJF,EADF,CA4BD","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ConfirmDialog({ title = 'Alerta', isOpen = false, onClose, children }) {\n  /*\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  */\n\n  const handleClose = (result) => {\n    // Só chama a função onClose se a prop correspondente tiver sido passada\n    if (onClose) onClose(result);\n  };\n\n  return (\n    <div>\n      {/*<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>*/}\n      <Dialog\n        open={isOpen}\n        onClose={() => handleClose(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n           {children}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(true)} color=\"primary\">\n            Ok\n          </Button>\n          <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\n            Cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}