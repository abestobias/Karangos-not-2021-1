{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  form: {\n    maxWidth: '80%',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      marginBottom: '24px'\n    }\n  },\n  toolbar: {\n    marginTop: '36px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  checkbox: {\n    alignItems: 'center'\n  }\n}));\n/* Classes de caracteres de entrada para a máscara do campo placa\n1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n3) 2º posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n// Representando as classes de caracteres da máscara como um objeto\n\nconst formatChars = {\n  'A': '[A-Za-z]',\n  '0': '[0-9]',\n  '#': '[0-9A-Ja-j]'\n}; // Finalmente, a máscara de entrada do campo placa\n\nconst placaMask = 'AAA-0#00'; // Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\nexport default function KarangosForm() {\n  _s();\n\n  const classes = useStyles();\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  });\n  const [currentId, setCurrentId] = useState();\n  const [importadoChecked, setImportadoChecked] = useState();\n  const [snackState, setSnackState] = useState({\n    open: false,\n    severity: 'success',\n    message: 'Karango salvo com sucesso'\n  });\n  const [btnSendState, setBtnSendState] = useState({\n    disabled: false,\n    label: 'Enviar'\n  }); //evitar declaração de campo vazio\n\n  const [error, setErrror] = useState({\n    narca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  });\n  const [isModfied, setIsModified] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const history = useHistory();\n\n  function handleInputChange(event, property) {\n    const karangoTemp = { ...karango\n    };\n    let importadoCheckedTemp = importadoChecked; // Se houver id no event.target, ele será o nome da propriedade\n    // senão, usaremos o valor do segundo parâmetro\n\n    if (event.target.id) property = event.target.id;\n\n    if (property === 'importado') {\n      const newState = importadoChecked; //setKarango({ ...karango, importado: (newState ? '1' : '0') })\n\n      karangoTemp.importado = newState ? '1' : '0'; //setImportadoChecked(newState)\n\n      importadoCheckedTemp = newState;\n    } else if (property === 'placa') {\n      //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n      karangoTemp[property] = event.target.value.toUpperCase();\n    } else {\n      // Quando o nome de uma propriedade de um objeto aparece entre [],\n      // isso se chama \"propriedade calculada\". O nome da propriedade vai\n      // corresponder à avaliação da expressão entre os colchetes\n      //setCurrentId(event.target.id)\n      //setKarango({ ...karango, [property]: event.target.value })\n      karangoTemp[property] = event.target.value;\n    }\n\n    setKarango(karangoTemp);\n    setImportadoChecked(importadoCheckedTemp);\n    setIsModified(true); // significa que o formulario foi modificado \n\n    validate(karangoTemp); // Dispara a validação\n  }\n\n  function validate(data) {\n    const errorTemp = {\n      narca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    };\n    let isValid = true; //Validação no campo marca  --- trim retira os espaços em branco no inicio e no fim \n\n    if (data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida';\n      isValid = false;\n    } //validação do campo modelo \n\n\n    if (data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido';\n      isValid = false;\n    } // validação do campo cor\n\n\n    if (data.cor.trim() === '') {\n      errorTemp.cor = 'Escolha uma cor';\n      isValid = false;\n    } // Validação no campo placa ---- valor valido não pode ser vazia nem conter o caracter sublinhado\n\n\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser corretamente preenchida';\n      isValid = false;\n    } //Validação do Campo preço --- valor valido deve ser numerico maior que zero \n\n\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = ' O preço deve ser preenchido corretamente';\n      isValid = false;\n    }\n\n    setErrror(errorTemp);\n    return isValid;\n  }\n\n  function years() {\n    let result = [];\n\n    for (let i = new Date().getFullYear(); i >= 1900; i--) result.push(i);\n\n    return result;\n  }\n\n  async function saveData() {\n    try {\n      // Desabilitar o botão Enviar\n      setBtnSendState({\n        disabled: true,\n        label: 'Enviando...'\n      });\n      await axios.post('https://api.faustocintra.com.br/karangos', karango);\n      setSnackState({\n        open: true,\n        severity: 'success',\n        message: 'Karango salvo com sucesso!'\n      });\n    } catch (error) {\n      setSnackState({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message\n      });\n    } // Reabilitar o botão Enviar\n\n\n    setBtnSendState({\n      disabled: false,\n      label: 'Enviar'\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Evita o recarregamento da página\n    // so salva os dados se eles forem validos\n\n    if (validate(karango)) saveData();\n  }\n\n  function Alert(props) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 16\n    }, this);\n  }\n\n  function handleSnackClose(event, reason) {\n    // Evita que a snackbar seja fechada clicando-se fora dela\n    if (reason === 'clickaway') return;\n    setSnackState({ ...snackState,\n      open: false\n    }); // Fecha a snackbar\n    // Retorna à página de listagem\n\n    history.push('/list'); // Retorna à página de listagem\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false); // Se o usuário concordou com a exclusão \n\n    if (result) history.push('/list');\n  }\n\n  function handleGoBack() {\n    // Se o formulário estiver modificado, mostrando o diálogo de confirmação\n    if (isModfied) setDialogOpen(true); //senão, voltamos diretamente a página de listagem \n    else history.push('/list');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      isOpen: dialogOpen,\n      onClose: handleDialogClose,\n      children: \"Dados n\\xE3o salvos, Deseja realmente voltar ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackState.open,\n      autoHideDuration: 6000,\n      onClose: handleSnackClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackClose,\n        severity: snackState.severity,\n        children: snackState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar Novo Karango\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: karango.marca,\n        onChange: handleInputChange,\n        fullWidth: true,\n        required: true,\n        error: error.marca !== '',\n        helperText: error.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: karango.modelo,\n        onChange: handleInputChange,\n        fullWidth: true,\n        required: true,\n        error: error.modelo !== '',\n        helperText: error.modelo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        select: true,\n        fullWidth: true,\n        required: true,\n        error: error.cor !== '',\n        helperText: error.cor,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Amarelo\",\n          children: \"Amarelo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Azul\",\n          children: \"Azul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Bege\",\n          children: \"Bege\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Branco\",\n          children: \"Branco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Cinza\",\n          children: \"Cinza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Dourado\",\n          children: \"Dourado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Laranja\",\n          children: \"Laranja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Marrom\",\n          children: \"Marrom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Prata\",\n          children: \"Prata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Preto\",\n          children: \"Preto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Roxo\",\n          children: \"Roxo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Verde\",\n          children: \"Verde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Vermelho\",\n          children: \"Vermelho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de Fabricacao\",\n        variant: \"filled\",\n        value: karango.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        select: true,\n        fullWidth: true,\n        children: years().map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"preco\",\n        label: \"Pre\\xE7o\",\n        variant: \"filled\",\n        value: karango.preco,\n        onChange: handleInputChange,\n        fullWidth: true,\n        type: \"number\",\n        onFocus: event => event.target.select(),\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"R$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 41\n          }, this)\n        },\n        required: true,\n        error: error.preco !== '',\n        helperText: error.preco\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        formatChars: formatChars,\n        mask: placaMask,\n        id: \"placa\",\n        onChange: event => handleInputChange(event, 'placa'),\n        value: karango.placa,\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Placa\",\n          variant: \"filled\",\n          fullWidth: true,\n          required: true,\n          error: error.placa !== '',\n          helperText: error.placa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.checkbox,\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: importadoChecked,\n            onChange: handleInputChange,\n            id: \"importado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 34\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          type: \"submit\",\n          disabled: btnSendState.disabled,\n          children: btnSendState.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onclick: handleGoBack,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [JSON.stringify(karango), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 47\n        }, this), \"currentId: \", currentId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"2jEQw4zrU2GeMus5D7FYsd7Bqc4=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js"],"names":["useState","useEffect","TextField","MenuItem","makeStyles","FormControl","FormControlLabel","Checkbox","InputMask","InputAdornment","Toolbar","Button","axios","Snackbar","MuiAlert","useHistory","ConfirmDialog","useStyles","form","maxWidth","margin","display","justifyContent","flexWrap","minWidth","marginBottom","toolbar","marginTop","width","checkbox","alignItems","formatChars","placaMask","KarangosForm","classes","karango","setKarango","id","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","currentId","setCurrentId","importadoChecked","setImportadoChecked","snackState","setSnackState","open","severity","message","btnSendState","setBtnSendState","disabled","label","error","setErrror","narca","isModfied","setIsModified","dialogOpen","setDialogOpen","history","handleInputChange","event","property","karangoTemp","importadoCheckedTemp","target","newState","value","toUpperCase","validate","data","errorTemp","isValid","trim","includes","isNaN","Number","years","result","i","push","saveData","post","handleSubmit","preventDefault","Alert","props","handleSnackClose","reason","handleDialogClose","handleGoBack","map","year","select","startAdornment","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px',\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n/* Classes de caracteres de entrada para a máscara do campo placa\n1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n3) 2º posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\nexport default function KarangosForm() {\n    const classes = useStyles()\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(), // Ano corrente\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n    const [currentId, setCurrentId] = useState()\n    const [importadoChecked, setImportadoChecked] = useState()\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Karango salvo com sucesso'\n    })\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    //evitar declaração de campo vazio\n\n    const [error, setErrror] = useState({\n        narca: '',\n        modelo: '',\n        cor: '',\n        placa: '',\n        preco: ''\n    })\n\n    const [isModfied, setIsModified] = useState(false)\n\n    const [dialogOpen, setDialogOpen] = useState(false)\n\n    const history = useHistory()\n    function handleInputChange(event, property) {\n\n        const karangoTemp = { ...karango }\n        let importadoCheckedTemp = importadoChecked\n\n        // Se houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'importado') {\n            const newState = importadoChecked\n            //setKarango({ ...karango, importado: (newState ? '1' : '0') })\n            karangoTemp.importado = (newState ? '1' : '0')\n            //setImportadoChecked(newState)\n            importadoCheckedTemp = newState\n        }\n        else if (property === 'placa') {\n            //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n            karangoTemp[property] = event.target.value.toUpperCase()\n        }\n        else {\n            // Quando o nome de uma propriedade de um objeto aparece entre [],\n            // isso se chama \"propriedade calculada\". O nome da propriedade vai\n            // corresponder à avaliação da expressão entre os colchetes\n            //setCurrentId(event.target.id)\n            //setKarango({ ...karango, [property]: event.target.value })\n            karangoTemp[property] = event.target.value\n        }\n\n        setKarango(karangoTemp)\n        setImportadoChecked(importadoCheckedTemp)\n        setIsModified(true) // significa que o formulario foi modificado \n\n        validate(karangoTemp) // Dispara a validação\n    }\n\n    function validate(data) {\n\n        const errorTemp = ({\n            narca: '',\n            modelo: '',\n            cor: '',\n            placa: '',\n            preco: ''\n        })\n        let isValid = true\n\n        //Validação no campo marca  --- trim retira os espaços em branco no inicio e no fim \n        if (data.marca.trim() === '') {\n            errorTemp.marca = 'A marca deve ser preenchida'\n            isValid = false\n        }\n\n        //validação do campo modelo \n        if (data.modelo.trim() === '') {\n            errorTemp.modelo = 'O modelo deve ser preenchido'\n            isValid = false\n        }\n\n        // validação do campo cor\n        if (data.cor.trim() === '') {\n            errorTemp.cor = 'Escolha uma cor'\n            isValid = false\n        }\n\n        // Validação no campo placa ---- valor valido não pode ser vazia nem conter o caracter sublinhado\n        if (data.placa.trim() === '' || data.placa.includes('_')) {\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\n            isValid = false\n        }\n\n        //Validação do Campo preço --- valor valido deve ser numerico maior que zero \n        if (isNaN(data.preco) || Number(data.preco) <= 0) {\n            errorTemp.preco = ' O preço deve ser preenchido corretamente'\n            isValid = false\n        }\n\n        setErrror(errorTemp)\n        return isValid\n\n    }\n\n\n    function years() {\n        let result = []\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n        return result\n    }\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\n            await axios.post('https://api.faustocintra.com.br/karangos', karango)\n\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Karango salvo com sucesso!'\n            })\n\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'ERRO: ' + error.message\n            })\n        }\n        // Reabilitar o botão Enviar\n        setBtnSendState({ disabled: false, label: 'Enviar' })\n    }\n    function handleSubmit(event) {\n\n        event.preventDefault() // Evita o recarregamento da página\n\n        // so salva os dados se eles forem validos\n        if (validate(karango)) saveData()\n\n    }\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n    function handleSnackClose(event, reason) {\n        // Evita que a snackbar seja fechada clicando-se fora dela\n        if (reason === 'clickaway') return\n        setSnackState({ ...snackState, open: false }) // Fecha a snackbar\n        // Retorna à página de listagem\n        history.push('/list') // Retorna à página de listagem\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou com a exclusão \n        if (result) history.push('/list')\n    }\n\n    function handleGoBack(){\n\n        // Se o formulário estiver modificado, mostrando o diálogo de confirmação\n        if(isModfied)setDialogOpen(true)\n        //senão, voltamos diretamente a página de listagem \n        else history.push('/list')\n    }\n\n    return (\n        <>\n\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n                Dados não salvos, Deseja realmente voltar ?\n            </ConfirmDialog>\n\n\n\n            <Snackbar open={snackState.open} autoHideDuration={6000} onClose={handleSnackClose}>\n                <Alert onClose={handleSnackClose} severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n            <h1>Cadastrar Novo Karango</h1>\n            <form className={classes.form} onSubmit={handleSubmit}>\n\n                <TextField\n                    id=\"marca\"\n                    label=\"Marca\"\n                    variant=\"filled\"\n                    value={karango.marca}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.marca !== ''}\n                    helperText={error.marca}\n                />\n\n                <TextField\n                    id=\"modelo\"\n                    label=\"Modelo\"\n                    variant=\"filled\"\n                    value={karango.modelo}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.modelo !== ''}\n                    helperText={error.modelo}\n                />\n\n\n                <TextField\n                    id=\"cor\"\n                    label=\"Cor\"\n                    variant=\"filled\"\n                    value={karango.cor}\n                    onChange={event =>\n                        handleInputChange(event, 'cor')}\n                    select\n                    fullWidth\n                    required\n                    error={error.cor !== ''}\n                    helperText={error.cor}\n                >\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n                </TextField>\n                <TextField id=\"ano_fabricacao\" label=\"Ano de Fabricacao\" variant=\"filled\" value={karango.ano_fabricacao} onChange={event => handleInputChange(event, 'ano_fabricacao')} select fullWidth>\n                    {years().map(year => <MenuItem value={year}>{year}</MenuItem>)}\n                </TextField>\n\n                <TextField\n                    id=\"preco\"\n                    label=\"Preço\"\n                    variant=\"filled\"\n                    value={karango.preco}\n                    onChange={handleInputChange}\n                    fullWidth\n                    type=\"number\"\n                    onFocus={event => event.target.select()}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                    }}\n                    required\n                    error={error.preco !== ''}\n                    helperText={error.preco}\n                />\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={placaMask}\n                    id=\"placa\"\n                    onChange={event => handleInputChange(event, 'placa')}\n                    value={karango.placa}\n                >\n                    {() => <TextField\n                        label=\"Placa\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.placa !== ''}\n                        helperText={error.placa}\n                    />}\n\n\n                </InputMask>\n                <FormControl className={classes.checkbox} fullWidth>\n                    <FormControlLabel\n                        control={<Checkbox checked={importadoChecked} onChange={handleInputChange} id=\"importado\" />}\n                        label=\"Importado?\"\n                    />\n                </FormControl>\n                <Toolbar className={classes.toolbar}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disabled={btnSendState.disabled}\n                    >\n                        {btnSendState.label}\n                    \n                    </Button>\n                    <Button variant=\"contained\" onclick={handleGoBack}>\n                        Voltar\n                        </Button>\n                </Toolbar>\n\n                <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div>\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}