{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/Karangos-not-2021-1/karangos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/workspace/Karangos-not-2021-1/karangos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/workspace/Karangos-not-2021-1/karangos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/workspace/Karangos-not-2021-1/karangos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useEffect,useState}from'react';import TextField from'@material-ui/core/TextField';import MenuItem from'@material-ui/core/MenuItem';import{makeStyles}from'@material-ui/core/styles';import{Checkbox,FormControl,FormControlLabel,Toolbar}from'@material-ui/core';import InputMask from'react-input-mask';import InputAdornment from'@material-ui/core/InputAdornment';import Button from'@material-ui/core/Button';import axios from'axios';import Snackbar from'@material-ui/core/Snackbar';import MuiAlert from'@material-ui/lab/Alert';import{useHistory,useParams}from'react-router-dom';import ConfirmDialog from'../ui/ConfirmDialog';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(){return{form:{//backgroundColor: 'green',  // Cor de debug\nmaxWidth:'80%',margin:'0 auto',display:'flex',justifyContent:'space-around',flexWrap:'wrap','& .MuiFormControl-root':{minWidth:'200px',maxWidth:'500px',marginBottom:'24px'}},toolbar:{marginTop:'36px',width:'100%',display:'flex',justifyContent:'space-around'},checkbox:{alignItems:'center'}};});/* \nClasses de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n    3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/ // Representando as classes de caracteres da máscara como um objeto\nvar formatChars={'A':'[A-Za-z]','0':'[0-9]','#':'[0-9A-Ja-j]'};// Finalmente, a máscara de entrada do campo placa\nvar placaMask='AAA-0#00';// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\nexport default function KarangosForm(){var classes=useStyles();var _useState=useState({id:null,marca:'',modelo:'',cor:'',ano_fabricacao:new Date().getFullYear(),// Ano corrente\nimportado:'0',placa:'',preco:0}),_useState2=_slicedToArray(_useState,2),karango=_useState2[0],setKarango=_useState2[1];// const [currentId, setCurrentId] = useState()\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),importadoChecked=_useState4[0],setImportadoChecked=_useState4[1];var _useState5=useState({open:false,severity:'success',message:'Karango salvo com sucesso.'}),_useState6=_slicedToArray(_useState5,2),snackState=_useState6[0],setSnackState=_useState6[1];var _useState7=useState({disabled:false,label:'Enviar'}),_useState8=_slicedToArray(_useState7,2),btnSendState=_useState8[0],setBtnSendState=_useState8[1];var _useState9=useState({marca:'',modelo:'',cor:'',placa:'',preco:''}),_useState10=_slicedToArray(_useState9,2),error=_useState10[0],setError=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isModified=_useState12[0],setIsModified=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),dialogOpen=_useState14[0],setDialogOpen=_useState14[1];// O diálogo de confirmação está aberto?\nvar _useState15=useState('Cadastrar Karango'),_useState16=_slicedToArray(_useState15,2),title=_useState16[0],setTitle=_useState16[1];var history=useHistory();var params=useParams();useEffect(function(){// Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\n// os dados do registro no back-end para edição\nif(params.id){setTitle('Editando Karango');getData(params.id);}},[]);function getData(_x){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://api.faustocintra.com.br/karangos/\".concat(id));case 3:response=_context.sent;setKarango(response.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);setSnackState({open:true,severity:'error',message:'Não foi possível carregar os dados para edição.'});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return _getData.apply(this,arguments);}function handleInputChange(event,property){var karangoTemp=_objectSpread({},karango);var importadoCheckedTemp=importadoChecked;// Se houver id no event.target, ele será o nome da propriedade\n// senão, usaremos o valor do segundo parâmetro\nif(event.target.id)property=event.target.id;if(property==='importado'){var newState=!importadoChecked;//setKarango({ ...karango, importado: (newState ? '1' : '0') })\nkarangoTemp.importado=newState?'1':'0';//setImportadoChecked(newState)\nimportadoCheckedTemp=newState;}else if(property==='placa'){//setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\nkarangoTemp[property]=event.target.value.toUpperCase();}else karangoTemp[property]=event.target.value;// Quando o nome de uma propriedade de um objeto aparece entre [],\n// isso se chama \"propriedade calculada\". O nome da propriedade vai\n// corresponder à avaliação da expressão entre os colchetes\n//setCurrentId(event.target.id)\n//setKarango({ ...karango, [property]: event.target.value })\nsetKarango(karangoTemp);setImportadoChecked(importadoCheckedTemp);setIsModified(true);// O formulário foi modificado\nvalidate(karangoTemp);// Dispara a validação\n}function validate(data){var errorTemp={marca:'',modelo:'',cor:'',placa:'',preco:''};var isValid=true;// Validação do campo marca\nif(data.marca.trim()===''){// trim(): retira os espaços em branco do nício e do final de uma string\nerrorTemp.marca='A marca deve ser preenchida';isValid=false;}// Validação do campo modelo\nif(data.modelo.trim()===''){// trim(): retira os espaços em branco do nício e do final de uma string\nerrorTemp.modelo='A modelo deve ser preenchido';isValid=false;}// Validação do campo cor\nif(data.cor.trim()===''){// trim(): retira os espaços em branco do nício e do final de uma string\nerrorTemp.cor='Escolha uma cor';isValid=false;}// Validação do campo placa\n// valor válido não pode ser string vazia e nem conter o caracter _ (sublinhado)\nif(data.placa.trim()===''||data.placa.includes('_')){// trim(): retira os espaços em branco do nício e do final de uma string\nerrorTemp.placa='A placa deve ser corretamente preenchida';isValid=false;}// Validação do campo preco\nif(isNaN(data.preco)||Number(data.preco)<=0){// trim(): retira os espaços em branco do nício e do final de uma string\nerrorTemp.preco='O preço deve ser preenchido e maior que zero';isValid=false;}setError(errorTemp);return isValid;}function years(){var result=[];for(var i=new Date().getFullYear();i>=1900;i--){result.push(i);}return result;}function saveData(){return _saveData.apply(this,arguments);}function _saveData(){_saveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;// Desabilitar o botão Enviar\nsetBtnSendState({disabled:true,label:'Enviando...'});// Se o registro já existe (edição)\nif(!params.id){_context2.next=7;break;}_context2.next=5;return axios.put(\"https://api.faustocintra.com.br/karangos/\".concat(params.id),karango);case 5:_context2.next=9;break;case 7:_context2.next=9;return axios.post(\"https://api.faustocintra.com.br/karangos\",karango);case 9://alert('Dados salvos com sucesso!')\nsetSnackState({open:true,severity:'success',message:'Karango salvo com sucesso!'});_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](0);//alert('ERRO: ' + error.message)\nsetSnackState({open:true,severity:'error',message:'ERRO: '+_context2.t0.message});case 15:// Reabilita o botão Enviar\nsetBtnSendState({disabled:false,label:'Enviar'});case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[0,12]]);}));return _saveData.apply(this,arguments);}function handleSubmit(event){event.preventDefault();// Evitar o recarregamento da página\n// Só salva os dados se forem válidos\nif(validate(karango))saveData();}function Alert(props){return/*#__PURE__*/_jsx(MuiAlert,_objectSpread({elevation:6,variant:\"filled\"},props));}function handleSnackClose(event,reason){// Evita que a Snackbar seja fechada clicando-se fora dela\nif(reason==='clickway')return;setSnackState(_objectSpread(_objectSpread({},snackState),{},{open:false}));// Fecha a Snackbar\n// Retorna à página de listagem\nhistory.push('/list');}function handleDialogClose(result){setDialogOpen(false);// Se o usuário concordou em voltar \nif(result)history.push('/list');}function handleGoBack(){// Se o formulário estiver modificado, mostramos o diálogo de confirmação\nif(isModified)setDialogOpen(true);// Senão, voltamos diretamente à de listagem\nelse history.push('/list');}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ConfirmDialog,{isOpen:dialogOpen,onClose:handleDialogClose,children:\"H\\xE1 dados n\\xE3o salvos. Deseja realmente voltar?\"}),/*#__PURE__*/_jsx(Snackbar,{open:snackState.open,autoHideDuration:6000,onClose:handleSnackClose,children:/*#__PURE__*/_jsx(Alert,{onClose:handleSnackClose,severity:snackState.severity,children:snackState.message})}),/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{id:\"marca\",label:\"Marca\",variant:\"filled\",value:karango.marca,onChange:handleInputChange,fullWidth:true,required:true,error:error.marca!=='',helperText:error.marca}),/*#__PURE__*/_jsx(TextField,{id:\"modelo\",label:\"Modelo\",variant:\"filled\",value:karango.modelo,onChange:handleInputChange,fullWidth:true,required:true,error:error.modelo!=='',helperText:error.modelo}),/*#__PURE__*/_jsxs(TextField,{id:\"cor\",label:\"Cor\",variant:\"filled\",value:karango.cor,onChange:function onChange(event){return handleInputChange(event,'cor');},select:true,fullWidth:true,required:true,error:error.cor!=='',helperText:error.cor,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Amarelo\",children:\"Amarelo\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Azul\",children:\"Azul\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Bege\",children:\"Bege\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Branco\",children:\"Branco\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Cinza\",children:\"Cinza\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Dourado\",children:\"Dourado\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Laranja\",children:\"Laranja\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Marrom\",children:\"Marrom\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Prata\",children:\"Prata\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Preto\",children:\"Preto\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Roxo\",children:\"Roxo\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Verde\",children:\"Verde\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Vermelho\",children:\"Vermelho\"})]}),/*#__PURE__*/_jsx(TextField,{id:\"ano_fabricacao\",label:\"Ano de Fabrica\\xE7\\xE3o\",variant:\"filled\",value:karango.ano_fabricacao,onChange:function onChange(event){return handleInputChange(event,'ano_fabricacao');},select:true,fullWidth:true,children:years().map(function(year){return/*#__PURE__*/_jsx(MenuItem,{value:year,children:year},year);})}),/*#__PURE__*/_jsx(TextField,{id:\"preco\",label:\"Pre\\xE7o\",variant:\"filled\",value:karango.preco,onChange:handleInputChange,fullWidth:true,type:\"number\",onFocus:function onFocus(event){return event.target.select();},InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"R$\"})},required:true,error:error.preco!=='',helperText:error.preco}),/*#__PURE__*/_jsx(InputMask,{formatChars:formatChars,mask:placaMask,id:\"placa\",onChange:function onChange(event){return handleInputChange(event,'placa');},value:karango.placa,children:function children(){return/*#__PURE__*/_jsx(TextField,{label:\"Placa\",variant:\"filled\",fullWidth:true,required:true,error:error.placa!=='',helperText:error.placa});}}),/*#__PURE__*/_jsx(FormControl,{className:classes.checkbox,fullWidth:true,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:importadoChecked,onChange:handleInputChange,id:\"importado\"}),label:\"Importado?\"})}),/*#__PURE__*/_jsxs(Toolbar,{className:classes.toolbar,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",type:\"submit\",disabled:btnSendState.disabled,children:btnSendState.label}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleGoBack,children:\"Voltar\"})]})]})]});}","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js"],"names":["React","useEffect","useState","TextField","MenuItem","makeStyles","Checkbox","FormControl","FormControlLabel","Toolbar","InputMask","InputAdornment","Button","axios","Snackbar","MuiAlert","useHistory","useParams","ConfirmDialog","useStyles","form","maxWidth","margin","display","justifyContent","flexWrap","minWidth","marginBottom","toolbar","marginTop","width","checkbox","alignItems","formatChars","placaMask","KarangosForm","classes","id","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","open","severity","message","snackState","setSnackState","disabled","label","btnSendState","setBtnSendState","error","setError","isModified","setIsModified","dialogOpen","setDialogOpen","title","setTitle","history","params","getData","get","response","data","handleInputChange","event","property","karangoTemp","importadoCheckedTemp","target","newState","value","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","Number","years","result","i","push","saveData","put","post","handleSubmit","preventDefault","Alert","props","handleSnackClose","reason","handleDialogClose","handleGoBack","map","year","select","startAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Checkbox, FormControl, FormControlLabel, Toolbar } from '@material-ui/core';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        //backgroundColor: 'green',  // Cor de debug\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px'\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n/* \nClasses de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n    3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n\n// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\n\nexport default function KarangosForm() {\n\n    const classes = useStyles()\n\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(),  // Ano corrente\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n\n    // const [currentId, setCurrentId] = useState()\n    const [importadoChecked, setImportadoChecked] = useState()\n\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Karango salvo com sucesso.'\n    })\n\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        marca: '',\n        modelo: '',\n        cor: '',\n        placa: '',\n        preco: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n    const [title, setTitle] = useState('Cadastrar Karango')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n\n        // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\n        // os dados do registro no back-end para edição\n        if (params.id) {\n            setTitle('Editando Karango')\n            getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n            setKarango(response.data)\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados para edição.'\n            })\n        }\n    }\n\n    function handleInputChange(event, property) {\n\n        const karangoTemp = { ...karango }\n        let importadoCheckedTemp = importadoChecked\n\n        // Se houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'importado') {\n            const newState = !importadoChecked\n            //setKarango({ ...karango, importado: (newState ? '1' : '0') })\n            karangoTemp.importado = (newState ? '1' : '0')\n\n            //setImportadoChecked(newState)\n            importadoCheckedTemp = newState\n        }\n        else if (property === 'placa') {\n            //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n            karangoTemp[property] = event.target.value.toUpperCase()\n        }\n        else karangoTemp[property] = event.target.value\n        // Quando o nome de uma propriedade de um objeto aparece entre [],\n        // isso se chama \"propriedade calculada\". O nome da propriedade vai\n        // corresponder à avaliação da expressão entre os colchetes\n        //setCurrentId(event.target.id)\n        //setKarango({ ...karango, [property]: event.target.value })\n        setKarango(karangoTemp)\n        setImportadoChecked(importadoCheckedTemp)\n        setIsModified(true)   // O formulário foi modificado\n        validate(karangoTemp)       // Dispara a validação\n    }\n\n    function validate(data) {\n\n        const errorTemp = {\n            marca: '',\n            modelo: '',\n            cor: '',\n            placa: '',\n            preco: ''\n        }\n        let isValid = true\n\n        // Validação do campo marca\n        if (data.marca.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.marca = 'A marca deve ser preenchida'\n            isValid = false\n        }\n\n        // Validação do campo modelo\n        if (data.modelo.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.modelo = 'A modelo deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo cor\n        if (data.cor.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.cor = 'Escolha uma cor'\n            isValid = false\n        }\n\n        // Validação do campo placa\n        // valor válido não pode ser string vazia e nem conter o caracter _ (sublinhado)\n        if (data.placa.trim() === '' || data.placa.includes('_')) {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\n            isValid = false\n        }\n\n        // Validação do campo preco\n        if (isNaN(data.preco) || Number(data.preco) <= 0) {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\n            isValid = false\n        }\n\n        setError(errorTemp)\n        return isValid\n\n    }\n\n    function years() {\n        let result = []\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n        return result\n    }\n\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\n\n            // Se o registro já existe (edição)\n            if (params.id) {\n                await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n            }\n            // Registro não existe, cria um novo (verbo HTTP POST)\n            else {\n                await axios.post(`https://api.faustocintra.com.br/karangos`, karango)\n            }\n            //alert('Dados salvos com sucesso!')\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Karango salvo com sucesso!'\n            })\n        }\n        catch (error) {\n            //alert('ERRO: ' + error.message)\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'ERRO: ' + error.message\n            })\n        }\n        // Reabilita o botão Enviar\n        setBtnSendState({ disabled: false, label: 'Enviar' })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault()   // Evitar o recarregamento da página\n\n        // Só salva os dados se forem válidos\n        if (validate(karango)) saveData()\n\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        // Evita que a Snackbar seja fechada clicando-se fora dela\n        if (reason === 'clickway') return\n        setSnackState({ ...snackState, open: false })  // Fecha a Snackbar\n\n        // Retorna à página de listagem\n        history.push('/list')\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou em voltar \n        if (result) history.push('/list')\n    }\n\n    function handleGoBack() {\n\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n        if (isModified) setDialogOpen(true)\n\n        // Senão, voltamos diretamente à de listagem\n        else history.push('/list')\n    }\n\n    return (\n        <>\n            <ConfirmDialog\n                isOpen={dialogOpen}\n                onClose={handleDialogClose}>\n                Há dados não salvos. Deseja realmente voltar?\n            </ConfirmDialog>\n\n            <Snackbar\n                open={snackState.open}\n                autoHideDuration={6000}\n                onClose={handleSnackClose}>\n                <Alert\n                    onClose={handleSnackClose}\n                    severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n            <h1>{title}</h1>\n\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <TextField\n                    id=\"marca\"\n                    label=\"Marca\"\n                    variant=\"filled\"\n                    value={karango.marca}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.marca !== ''}\n                    helperText={error.marca}\n                />\n\n                <TextField\n                    id=\"modelo\"\n                    label=\"Modelo\"\n                    variant=\"filled\"\n                    value={karango.modelo}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.modelo !== ''}\n                    helperText={error.modelo}\n                />\n\n                <TextField\n                    id=\"cor\"\n                    label=\"Cor\"\n                    variant=\"filled\"\n                    value={karango.cor}\n                    onChange={event => handleInputChange(event, 'cor')}\n                    select fullWidth\n                    required\n                    error={error.cor !== ''}\n                    helperText={error.cor} >\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n                </TextField>\n\n                <TextField\n                    id=\"ano_fabricacao\"\n                    label=\"Ano de Fabricação\"\n                    variant=\"filled\"\n                    value={karango.ano_fabricacao}\n                    onChange={event => handleInputChange(event, 'ano_fabricacao')}\n                    select fullWidth >\n                    {years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n                </TextField>\n\n                <TextField\n                    id=\"preco\"\n                    label=\"Preço\"\n                    variant=\"filled\"\n                    value={karango.preco}\n                    onChange={handleInputChange}\n                    fullWidth type=\"number\"\n                    onFocus={event => event.target.select()}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                    }}\n                    required\n                    error={error.preco !== ''}\n                    helperText={error.preco}\n                />\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={placaMask}\n                    id=\"placa\"\n                    onChange={event => handleInputChange(event, 'placa')}\n                    value={karango.placa} >\n                    {() => <TextField\n                        label=\"Placa\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.placa !== ''}\n                        helperText={error.placa}\n                    />}\n                </InputMask>\n\n                <FormControl\n                    className={classes.checkbox}\n                    fullWidth >\n                    <FormControlLabel\n                        control={<Checkbox checked={importadoChecked}\n                            onChange={handleInputChange} id=\"importado\" />}\n                        label=\"Importado?\" />\n                </FormControl>\n\n                <Toolbar\n                    className={classes.toolbar} >\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disabled={btnSendState.disabled} >\n\n                        {btnSendState.label}\n\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleGoBack} >\n                        Voltar\n                    </Button>\n                </Toolbar>\n\n                {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}