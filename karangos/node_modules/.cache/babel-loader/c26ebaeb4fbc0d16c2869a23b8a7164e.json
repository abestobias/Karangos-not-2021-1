{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Checkbox, FormControl, FormControlLabel, Toolbar } from '@material-ui/core';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  form: {\n    //backgroundColor: 'green',  // Cor de debug\n    maxWidth: '80%',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      marginBottom: '24px'\n    }\n  },\n  toolbar: {\n    marginTop: '36px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  checkbox: {\n    alignItems: 'center'\n  }\n}));\n/* \nClasses de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n    3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n// Representando as classes de caracteres da máscara como um objeto\n\nconst formatChars = {\n  'A': '[A-Za-z]',\n  '0': '[0-9]',\n  '#': '[0-9A-Ja-j]'\n}; // Finalmente, a máscara de entrada do campo placa\n\nconst placaMask = 'AAA-0#00'; // Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\nexport default function KarangosForm() {\n  _s();\n\n  const classes = useStyles();\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  }); // const [currentId, setCurrentId] = useState()\n\n  const [importadoChecked, setImportadoChecked] = useState();\n  const [snackState, setSnackState] = useState({\n    open: false,\n    severity: 'success',\n    message: 'Karango salvo com sucesso.'\n  });\n  const [btnSendState, setBtnSendState] = useState({\n    disabled: false,\n    label: 'Enviar'\n  });\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  });\n  const [isModified, setIsModified] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false); // O diálogo de confirmação está aberto?\n\n  const [title, setTitle] = useState('Cadastrar Karango');\n  const history = useHistory();\n  const params = useParams();\n  useEffect(() => {\n    // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\n    // os dados do registro no back-end para edição\n    if (params.id) {\n      setTitle('Editando Karango');\n      getData(params.id);\n    }\n  }, []);\n\n  async function getData(id) {\n    try {\n      let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`);\n      setKarango(response.data);\n    } catch (error) {\n      setSnackState({\n        open: true,\n        severity: 'error',\n        message: 'Não foi possível carregar os dados para edição.'\n      });\n    }\n  }\n\n  function handleInputChange(event, property) {\n    const karangoTemp = { ...karango\n    };\n    let importadoCheckedTemp = importadoChecked; // Se houver id no event.target, ele será o nome da propriedade\n    // senão, usaremos o valor do segundo parâmetro\n\n    if (event.target.id) property = event.target.id;\n\n    if (property === 'importado') {\n      const newState = !importadoChecked; //setKarango({ ...karango, importado: (newState ? '1' : '0') })\n\n      karangoTemp.importado = newState ? '1' : '0'; //setImportadoChecked(newState)\n\n      importadoCheckedTemp = newState;\n    } else if (property === 'placa') {\n      //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n      karangoTemp[property] = event.target.value.toUpperCase();\n    } else karangoTemp[property] = event.target.value; // Quando o nome de uma propriedade de um objeto aparece entre [],\n    // isso se chama \"propriedade calculada\". O nome da propriedade vai\n    // corresponder à avaliação da expressão entre os colchetes\n    //setCurrentId(event.target.id)\n    //setKarango({ ...karango, [property]: event.target.value })\n\n\n    setKarango(karangoTemp);\n    setImportadoChecked(importadoCheckedTemp);\n    setIsModified(true); // O formulário foi modificado\n\n    validate(karangoTemp); // Dispara a validação\n  }\n\n  function validate(data) {\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    };\n    let isValid = true; // Validação do campo marca\n\n    if (data.marca.trim() === '') {\n      // trim(): retira os espaços em branco do nício e do final de uma string\n      errorTemp.marca = 'A marca deve ser preenchida';\n      isValid = false;\n    } // Validação do campo modelo\n\n\n    if (data.modelo.trim() === '') {\n      // trim(): retira os espaços em branco do nício e do final de uma string\n      errorTemp.modelo = 'A modelo deve ser preenchido';\n      isValid = false;\n    } // Validação do campo cor\n\n\n    if (data.cor.trim() === '') {\n      // trim(): retira os espaços em branco do nício e do final de uma string\n      errorTemp.cor = 'Escolha uma cor';\n      isValid = false;\n    } // Validação do campo placa\n    // valor válido não pode ser string vazia e nem conter o caracter _ (sublinhado)\n\n\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\n      // trim(): retira os espaços em branco do nício e do final de uma string\n      errorTemp.placa = 'A placa deve ser corretamente preenchida';\n      isValid = false;\n    } // Validação do campo preco\n\n\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\n      // trim(): retira os espaços em branco do nício e do final de uma string\n      errorTemp.preco = 'O preço deve ser preenchido e maior que zero';\n      isValid = false;\n    }\n\n    setError(errorTemp);\n    return isValid;\n  }\n\n  function years() {\n    let result = [];\n\n    for (let i = new Date().getFullYear(); i >= 1900; i--) result.push(i);\n\n    return result;\n  }\n\n  async function saveData() {\n    try {\n      // Desabilitar o botão Enviar\n      setBtnSendState({\n        disabled: true,\n        label: 'Enviando...'\n      }); // Se o registro já existe (edição)\n\n      if (params.id) {\n        await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango);\n      } // Registro não existe, cria um novo (verbo HTTP POST)\n      else {\n          await axios.post(`https://api.faustocintra.com.br/karangos`, karango);\n        } //alert('Dados salvos com sucesso!')\n\n\n      setSnackState({\n        open: true,\n        severity: 'success',\n        message: 'Karango salvo com sucesso!'\n      });\n    } catch (error) {\n      //alert('ERRO: ' + error.message)\n      setSnackState({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message\n      });\n    } // Reabilita o botão Enviar\n\n\n    setBtnSendState({\n      disabled: false,\n      label: 'Enviar'\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Evitar o recarregamento da página\n    // Só salva os dados se forem válidos\n\n    if (validate(karango)) saveData();\n  }\n\n  function Alert(props) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 16\n    }, this);\n  }\n\n  function handleSnackClose(event, reason) {\n    // Evita que a Snackbar seja fechada clicando-se fora dela\n    if (reason === 'clickway') return;\n    setSnackState({ ...snackState,\n      open: false\n    }); // Fecha a Snackbar\n    // Retorna à página de listagem\n\n    history.push('/list');\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false); // Se o usuário concordou em voltar \n\n    if (result) history.push('/list');\n  }\n\n  function handleGoBack() {\n    // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n    if (isModified) setDialogOpen(true); // Senão, voltamos diretamente à de listagem\n    else history.push('/list');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      isOpen: dialogOpen,\n      onClose: handleDialogClose,\n      children: \"H\\xE1 dados n\\xE3o salvos. Deseja realmente voltar?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackState.open,\n      autoHideDuration: 6000,\n      onClose: handleSnackClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackClose,\n        severity: snackState.severity,\n        children: snackState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: karango.marca,\n        onChange: handleInputChange,\n        fullWidth: true,\n        required: true,\n        error: error.marca !== '',\n        helperText: error.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: karango.modelo,\n        onChange: handleInputChange,\n        fullWidth: true,\n        required: true,\n        error: error.modelo !== '',\n        helperText: error.modelo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        select: true,\n        fullWidth: true,\n        required: true,\n        error: error.cor !== '',\n        helperText: error.cor,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Amarelo\",\n          children: \"Amarelo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Azul\",\n          children: \"Azul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Bege\",\n          children: \"Bege\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Branco\",\n          children: \"Branco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Cinza\",\n          children: \"Cinza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Dourado\",\n          children: \"Dourado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Laranja\",\n          children: \"Laranja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Marrom\",\n          children: \"Marrom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Prata\",\n          children: \"Prata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Preto\",\n          children: \"Preto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Roxo\",\n          children: \"Roxo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Verde\",\n          children: \"Verde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Vermelho\",\n          children: \"Vermelho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de Fabrica\\xE7\\xE3o\",\n        variant: \"filled\",\n        value: karango.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        select: true,\n        fullWidth: true,\n        children: years().map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"preco\",\n        label: \"Pre\\xE7o\",\n        variant: \"filled\",\n        value: karango.preco,\n        onChange: handleInputChange,\n        fullWidth: true,\n        type: \"number\",\n        onFocus: event => event.target.select(),\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"R$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 41\n          }, this)\n        },\n        required: true,\n        error: error.preco !== '',\n        helperText: error.preco\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        formatChars: formatChars,\n        mask: placaMask,\n        id: \"placa\",\n        onChange: event => handleInputChange(event, 'placa'),\n        value: karango.placa,\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Placa\",\n          variant: \"filled\",\n          fullWidth: true,\n          required: true,\n          error: error.placa !== '',\n          helperText: error.placa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.checkbox,\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: importadoChecked,\n            onChange: handleInputChange,\n            id: \"importado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 34\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          type: \"submit\",\n          disabled: btnSendState.disabled,\n          children: btnSendState.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleGoBack,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"yIN8qLI8JFAFw3B76AMnASQGJ9k=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js"],"names":["React","useEffect","useState","TextField","MenuItem","makeStyles","Checkbox","FormControl","FormControlLabel","Toolbar","InputMask","InputAdornment","Button","axios","Snackbar","MuiAlert","useHistory","useParams","ConfirmDialog","useStyles","form","maxWidth","margin","display","justifyContent","flexWrap","minWidth","marginBottom","toolbar","marginTop","width","checkbox","alignItems","formatChars","placaMask","KarangosForm","classes","karango","setKarango","id","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","importadoChecked","setImportadoChecked","snackState","setSnackState","open","severity","message","btnSendState","setBtnSendState","disabled","label","error","setError","isModified","setIsModified","dialogOpen","setDialogOpen","title","setTitle","history","params","getData","response","get","data","handleInputChange","event","property","karangoTemp","importadoCheckedTemp","target","newState","value","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","Number","years","result","i","push","saveData","put","post","handleSubmit","preventDefault","Alert","props","handleSnackClose","reason","handleDialogClose","handleGoBack","map","year","select","startAdornment"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkDC,OAAlD,QAAiE,mBAAjE;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAC,OAAO;AAChCe,EAAAA,IAAI,EAAE;AACF;AACAC,IAAAA,QAAQ,EAAE,KAFR;AAGFC,IAAAA,MAAM,EAAE,QAHN;AAIFC,IAAAA,OAAO,EAAE,MAJP;AAKFC,IAAAA,cAAc,EAAE,cALd;AAMFC,IAAAA,QAAQ,EAAE,MANR;AAOF,8BAA0B;AACtBC,MAAAA,QAAQ,EAAE,OADY;AAEtBL,MAAAA,QAAQ,EAAE,OAFY;AAGtBM,MAAAA,YAAY,EAAE;AAHQ;AAPxB,GAD0B;AAchCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE,MADN;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLP,IAAAA,OAAO,EAAE,MAHJ;AAILC,IAAAA,cAAc,EAAE;AAJX,GAduB;AAoBhCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE;AADN;AApBsB,CAAP,CAAD,CAA5B;AAyBA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,WAAW,GAAG;AAChB,OAAK,UADW;AAEhB,OAAK,OAFW;AAGhB,OAAK;AAHW,CAApB,C,CAMA;;AACA,MAAMC,SAAS,GAAG,UAAlB,C,CAEA;AACA;;AAGA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AAEA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBpC,QAAQ,CAAC;AACnCqC,IAAAA,EAAE,EAAE,IAD+B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,MAAM,EAAE,EAH2B;AAInCC,IAAAA,GAAG,EAAE,EAJ8B;AAKnCC,IAAAA,cAAc,EAAG,IAAIC,IAAJ,EAAD,CAAaC,WAAb,EALmB;AAKU;AAC7CC,IAAAA,SAAS,EAAE,GANwB;AAOnCC,IAAAA,KAAK,EAAE,EAP4B;AAQnCC,IAAAA,KAAK,EAAE;AAR4B,GAAD,CAAtC,CAJmC,CAenC;;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0ChD,QAAQ,EAAxD;AAEA,QAAM,CAACiD,UAAD,EAAaC,aAAb,IAA8BlD,QAAQ,CAAC;AACzCmD,IAAAA,IAAI,EAAE,KADmC;AAEzCC,IAAAA,QAAQ,EAAE,SAF+B;AAGzCC,IAAAA,OAAO,EAAE;AAHgC,GAAD,CAA5C;AAMA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,CAAC;AAC7CwD,IAAAA,QAAQ,EAAE,KADmC;AAE7CC,IAAAA,KAAK,EAAE;AAFsC,GAAD,CAAhD;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3D,QAAQ,CAAC;AAC/BsC,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,MAAM,EAAE,EAFuB;AAG/BC,IAAAA,GAAG,EAAE,EAH0B;AAI/BK,IAAAA,KAAK,EAAE,EAJwB;AAK/BC,IAAAA,KAAK,EAAE;AALwB,GAAD,CAAlC;AAQA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8B7D,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAAC8D,UAAD,EAAaC,aAAb,IAA8B/D,QAAQ,CAAC,KAAD,CAA5C,CAvCmC,CAuCiB;;AAEpD,QAAM,CAACgE,KAAD,EAAQC,QAAR,IAAoBjE,QAAQ,CAAC,mBAAD,CAAlC;AAEA,QAAMkE,OAAO,GAAGpD,UAAU,EAA1B;AACA,QAAMqD,MAAM,GAAGpD,SAAS,EAAxB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA;AACA,QAAIoE,MAAM,CAAC9B,EAAX,EAAe;AACX4B,MAAAA,QAAQ,CAAC,kBAAD,CAAR;AACAG,MAAAA,OAAO,CAACD,MAAM,CAAC9B,EAAR,CAAP;AACH;AACJ,GARQ,EAQN,EARM,CAAT;;AAUA,iBAAe+B,OAAf,CAAuB/B,EAAvB,EAA2B;AACvB,QAAI;AACA,UAAIgC,QAAQ,GAAG,MAAM1D,KAAK,CAAC2D,GAAN,CAAW,4CAA2CjC,EAAG,EAAzD,CAArB;AACAD,MAAAA,UAAU,CAACiC,QAAQ,CAACE,IAAV,CAAV;AACH,KAHD,CAIA,OAAOb,KAAP,EAAc;AACVR,MAAAA,aAAa,CAAC;AACVC,QAAAA,IAAI,EAAE,IADI;AAEVC,QAAAA,QAAQ,EAAE,OAFA;AAGVC,QAAAA,OAAO,EAAE;AAHC,OAAD,CAAb;AAKH;AACJ;;AAED,WAASmB,iBAAT,CAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C;AAExC,UAAMC,WAAW,GAAG,EAAE,GAAGxC;AAAL,KAApB;AACA,QAAIyC,oBAAoB,GAAG7B,gBAA3B,CAHwC,CAKxC;AACA;;AACA,QAAI0B,KAAK,CAACI,MAAN,CAAaxC,EAAjB,EAAqBqC,QAAQ,GAAGD,KAAK,CAACI,MAAN,CAAaxC,EAAxB;;AAErB,QAAIqC,QAAQ,KAAK,WAAjB,EAA8B;AAC1B,YAAMI,QAAQ,GAAG,CAAC/B,gBAAlB,CAD0B,CAE1B;;AACA4B,MAAAA,WAAW,CAAC/B,SAAZ,GAAyBkC,QAAQ,GAAG,GAAH,GAAS,GAA1C,CAH0B,CAK1B;;AACAF,MAAAA,oBAAoB,GAAGE,QAAvB;AACH,KAPD,MAQK,IAAIJ,QAAQ,KAAK,OAAjB,EAA0B;AAC3B;AACAC,MAAAA,WAAW,CAACD,QAAD,CAAX,GAAwBD,KAAK,CAACI,MAAN,CAAaE,KAAb,CAAmBC,WAAnB,EAAxB;AACH,KAHI,MAIAL,WAAW,CAACD,QAAD,CAAX,GAAwBD,KAAK,CAACI,MAAN,CAAaE,KAArC,CArBmC,CAsBxC;AACA;AACA;AACA;AACA;;;AACA3C,IAAAA,UAAU,CAACuC,WAAD,CAAV;AACA3B,IAAAA,mBAAmB,CAAC4B,oBAAD,CAAnB;AACAf,IAAAA,aAAa,CAAC,IAAD,CAAb,CA7BwC,CA6BlB;;AACtBoB,IAAAA,QAAQ,CAACN,WAAD,CAAR,CA9BwC,CA8BZ;AAC/B;;AAED,WAASM,QAAT,CAAkBV,IAAlB,EAAwB;AAEpB,UAAMW,SAAS,GAAG;AACd5C,MAAAA,KAAK,EAAE,EADO;AAEdC,MAAAA,MAAM,EAAE,EAFM;AAGdC,MAAAA,GAAG,EAAE,EAHS;AAIdK,MAAAA,KAAK,EAAE,EAJO;AAKdC,MAAAA,KAAK,EAAE;AALO,KAAlB;AAOA,QAAIqC,OAAO,GAAG,IAAd,CAToB,CAWpB;;AACA,QAAIZ,IAAI,CAACjC,KAAL,CAAW8C,IAAX,OAAsB,EAA1B,EAA8B;AAAM;AAChCF,MAAAA,SAAS,CAAC5C,KAAV,GAAkB,6BAAlB;AACA6C,MAAAA,OAAO,GAAG,KAAV;AACH,KAfmB,CAiBpB;;;AACA,QAAIZ,IAAI,CAAChC,MAAL,CAAY6C,IAAZ,OAAuB,EAA3B,EAA+B;AAAM;AACjCF,MAAAA,SAAS,CAAC3C,MAAV,GAAmB,8BAAnB;AACA4C,MAAAA,OAAO,GAAG,KAAV;AACH,KArBmB,CAuBpB;;;AACA,QAAIZ,IAAI,CAAC/B,GAAL,CAAS4C,IAAT,OAAoB,EAAxB,EAA4B;AAAM;AAC9BF,MAAAA,SAAS,CAAC1C,GAAV,GAAgB,iBAAhB;AACA2C,MAAAA,OAAO,GAAG,KAAV;AACH,KA3BmB,CA6BpB;AACA;;;AACA,QAAIZ,IAAI,CAAC1B,KAAL,CAAWuC,IAAX,OAAsB,EAAtB,IAA4Bb,IAAI,CAAC1B,KAAL,CAAWwC,QAAX,CAAoB,GAApB,CAAhC,EAA0D;AAAM;AAC5DH,MAAAA,SAAS,CAACrC,KAAV,GAAkB,0CAAlB;AACAsC,MAAAA,OAAO,GAAG,KAAV;AACH,KAlCmB,CAoCpB;;;AACA,QAAIG,KAAK,CAACf,IAAI,CAACzB,KAAN,CAAL,IAAqByC,MAAM,CAAChB,IAAI,CAACzB,KAAN,CAAN,IAAsB,CAA/C,EAAkD;AAAM;AACpDoC,MAAAA,SAAS,CAACpC,KAAV,GAAkB,8CAAlB;AACAqC,MAAAA,OAAO,GAAG,KAAV;AACH;;AAEDxB,IAAAA,QAAQ,CAACuB,SAAD,CAAR;AACA,WAAOC,OAAP;AAEH;;AAED,WAASK,KAAT,GAAiB;AACb,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAI,IAAIhD,IAAJ,EAAD,CAAaC,WAAb,EAAb,EAAyC+C,CAAC,IAAI,IAA9C,EAAoDA,CAAC,EAArD,EAAyDD,MAAM,CAACE,IAAP,CAAYD,CAAZ;;AACzD,WAAOD,MAAP;AACH;;AAED,iBAAeG,QAAf,GAA0B;AACtB,QAAI;AACA;AACArC,MAAAA,eAAe,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAAD,CAAf,CAFA,CAIA;;AACA,UAAIU,MAAM,CAAC9B,EAAX,EAAe;AACX,cAAM1B,KAAK,CAACkF,GAAN,CAAW,4CAA2C1B,MAAM,CAAC9B,EAAG,EAAhE,EAAmEF,OAAnE,CAAN;AACH,OAFD,CAGA;AAHA,WAIK;AACD,gBAAMxB,KAAK,CAACmF,IAAN,CAAY,0CAAZ,EAAuD3D,OAAvD,CAAN;AACH,SAXD,CAYA;;;AACAe,MAAAA,aAAa,CAAC;AACVC,QAAAA,IAAI,EAAE,IADI;AAEVC,QAAAA,QAAQ,EAAE,SAFA;AAGVC,QAAAA,OAAO,EAAE;AAHC,OAAD,CAAb;AAKH,KAlBD,CAmBA,OAAOK,KAAP,EAAc;AACV;AACAR,MAAAA,aAAa,CAAC;AACVC,QAAAA,IAAI,EAAE,IADI;AAEVC,QAAAA,QAAQ,EAAE,OAFA;AAGVC,QAAAA,OAAO,EAAE,WAAWK,KAAK,CAACL;AAHhB,OAAD,CAAb;AAKH,KA3BqB,CA4BtB;;;AACAE,IAAAA,eAAe,CAAC;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAD,CAAf;AACH;;AAED,WAASsC,YAAT,CAAsBtB,KAAtB,EAA6B;AAEzBA,IAAAA,KAAK,CAACuB,cAAN,GAFyB,CAEA;AAEzB;;AACA,QAAIf,QAAQ,CAAC9C,OAAD,CAAZ,EAAuByD,QAAQ;AAElC;;AAED,WAASK,KAAT,CAAeC,KAAf,EAAsB;AAClB,wBAAO,QAAC,QAAD;AAAU,MAAA,SAAS,EAAE,CAArB;AAAwB,MAAA,OAAO,EAAC,QAAhC;AAAA,SAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,WAASC,gBAAT,CAA0B1B,KAA1B,EAAiC2B,MAAjC,EAAyC;AACrC;AACA,QAAIA,MAAM,KAAK,UAAf,EAA2B;AAC3BlD,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBE,MAAAA,IAAI,EAAE;AAAvB,KAAD,CAAb,CAHqC,CAGU;AAE/C;;AACAe,IAAAA,OAAO,CAACyB,IAAR,CAAa,OAAb;AACH;;AAED,WAASU,iBAAT,CAA2BZ,MAA3B,EAAmC;AAC/B1B,IAAAA,aAAa,CAAC,KAAD,CAAb,CAD+B,CAG/B;;AACA,QAAI0B,MAAJ,EAAYvB,OAAO,CAACyB,IAAR,CAAa,OAAb;AACf;;AAED,WAASW,YAAT,GAAwB;AAEpB;AACA,QAAI1C,UAAJ,EAAgBG,aAAa,CAAC,IAAD,CAAb,CAAhB,CAEA;AAFA,SAGKG,OAAO,CAACyB,IAAR,CAAa,OAAb;AACR;;AAED,sBACI;AAAA,4BACI,QAAC,aAAD;AACI,MAAA,MAAM,EAAE7B,UADZ;AAEI,MAAA,OAAO,EAAEuC,iBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,QAAD;AACI,MAAA,IAAI,EAAEpD,UAAU,CAACE,IADrB;AAEI,MAAA,gBAAgB,EAAE,IAFtB;AAGI,MAAA,OAAO,EAAEgD,gBAHb;AAAA,6BAII,QAAC,KAAD;AACI,QAAA,OAAO,EAAEA,gBADb;AAEI,QAAA,QAAQ,EAAElD,UAAU,CAACG,QAFzB;AAAA,kBAGKH,UAAU,CAACI;AAHhB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAkBI;AAAA,gBAAKW;AAAL;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAoBI;AAAM,MAAA,SAAS,EAAE9B,OAAO,CAAChB,IAAzB;AAA+B,MAAA,QAAQ,EAAE6E,YAAzC;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,OADP;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,OAAO,EAAC,QAHZ;AAII,QAAA,KAAK,EAAE5D,OAAO,CAACG,KAJnB;AAKI,QAAA,QAAQ,EAAEkC,iBALd;AAMI,QAAA,SAAS,MANb;AAOI,QAAA,QAAQ,MAPZ;AAQI,QAAA,KAAK,EAAEd,KAAK,CAACpB,KAAN,KAAgB,EAR3B;AASI,QAAA,UAAU,EAAEoB,KAAK,CAACpB;AATtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,QADP;AAEI,QAAA,KAAK,EAAC,QAFV;AAGI,QAAA,OAAO,EAAC,QAHZ;AAII,QAAA,KAAK,EAAEH,OAAO,CAACI,MAJnB;AAKI,QAAA,QAAQ,EAAEiC,iBALd;AAMI,QAAA,SAAS,MANb;AAOI,QAAA,QAAQ,MAPZ;AAQI,QAAA,KAAK,EAAEd,KAAK,CAACnB,MAAN,KAAiB,EAR5B;AASI,QAAA,UAAU,EAAEmB,KAAK,CAACnB;AATtB;AAAA;AAAA;AAAA;AAAA,cAbJ,eAyBI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,KADP;AAEI,QAAA,KAAK,EAAC,KAFV;AAGI,QAAA,OAAO,EAAC,QAHZ;AAII,QAAA,KAAK,EAAEJ,OAAO,CAACK,GAJnB;AAKI,QAAA,QAAQ,EAAEiC,KAAK,IAAID,iBAAiB,CAACC,KAAD,EAAQ,KAAR,CALxC;AAMI,QAAA,MAAM,MANV;AAMW,QAAA,SAAS,MANpB;AAOI,QAAA,QAAQ,MAPZ;AAQI,QAAA,KAAK,EAAEf,KAAK,CAAClB,GAAN,KAAc,EARzB;AASI,QAAA,UAAU,EAAEkB,KAAK,CAAClB,GATtB;AAAA,gCAUI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAiBI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAkBI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAmBI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAoBI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAqBI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAsBI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eAkDI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,gBADP;AAEI,QAAA,KAAK,EAAC,yBAFV;AAGI,QAAA,OAAO,EAAC,QAHZ;AAII,QAAA,KAAK,EAAEL,OAAO,CAACM,cAJnB;AAKI,QAAA,QAAQ,EAAEgC,KAAK,IAAID,iBAAiB,CAACC,KAAD,EAAQ,gBAAR,CALxC;AAMI,QAAA,MAAM,MANV;AAMW,QAAA,SAAS,MANpB;AAAA,kBAOKe,KAAK,GAAGe,GAAR,CAAYC,IAAI,iBAAI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,IAAjB;AAAA,oBAAmCA;AAAnC,WAA4BA,IAA5B;AAAA;AAAA;AAAA;AAAA,gBAApB;AAPL;AAAA;AAAA;AAAA;AAAA,cAlDJ,eA4DI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,OADP;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,OAAO,EAAC,QAHZ;AAII,QAAA,KAAK,EAAErE,OAAO,CAACW,KAJnB;AAKI,QAAA,QAAQ,EAAE0B,iBALd;AAMI,QAAA,SAAS,MANb;AAMc,QAAA,IAAI,EAAC,QANnB;AAOI,QAAA,OAAO,EAAEC,KAAK,IAAIA,KAAK,CAACI,MAAN,CAAa4B,MAAb,EAPtB;AAQI,QAAA,UAAU,EAAE;AACRC,UAAAA,cAAc,eAAE,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR,SARhB;AAWI,QAAA,QAAQ,MAXZ;AAYI,QAAA,KAAK,EAAEhD,KAAK,CAACZ,KAAN,KAAgB,EAZ3B;AAaI,QAAA,UAAU,EAAEY,KAAK,CAACZ;AAbtB;AAAA;AAAA;AAAA;AAAA,cA5DJ,eA4EI,QAAC,SAAD;AACI,QAAA,WAAW,EAAEf,WADjB;AAEI,QAAA,IAAI,EAAEC,SAFV;AAGI,QAAA,EAAE,EAAC,OAHP;AAII,QAAA,QAAQ,EAAEyC,KAAK,IAAID,iBAAiB,CAACC,KAAD,EAAQ,OAAR,CAJxC;AAKI,QAAA,KAAK,EAAEtC,OAAO,CAACU,KALnB;AAAA,kBAMK,mBAAM,QAAC,SAAD;AACH,UAAA,KAAK,EAAC,OADH;AAEH,UAAA,OAAO,EAAC,QAFL;AAGH,UAAA,SAAS,MAHN;AAIH,UAAA,QAAQ,MAJL;AAKH,UAAA,KAAK,EAAEa,KAAK,CAACb,KAAN,KAAgB,EALpB;AAMH,UAAA,UAAU,EAAEa,KAAK,CAACb;AANf;AAAA;AAAA;AAAA;AAAA;AANX;AAAA;AAAA;AAAA;AAAA,cA5EJ,eA4FI,QAAC,WAAD;AACI,QAAA,SAAS,EAAEX,OAAO,CAACL,QADvB;AAEI,QAAA,SAAS,MAFb;AAAA,+BAGI,QAAC,gBAAD;AACI,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEkB,gBAAnB;AACL,YAAA,QAAQ,EAAEyB,iBADL;AACwB,YAAA,EAAE,EAAC;AAD3B;AAAA;AAAA;AAAA;AAAA,kBADb;AAGI,UAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cA5FJ,eAqGI,QAAC,OAAD;AACI,QAAA,SAAS,EAAEtC,OAAO,CAACR,OADvB;AAAA,gCAEI,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,WADZ;AAEI,UAAA,KAAK,EAAC,WAFV;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,QAAQ,EAAE4B,YAAY,CAACE,QAJ3B;AAAA,oBAMKF,YAAY,CAACG;AANlB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,WADZ;AAEI,UAAA,OAAO,EAAE6C,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArGJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA,kBADJ;AAgJH;;GAlXuBrE,Y;UAEJhB,S,EAyCAH,U,EACDC,S;;;KA5CKkB,Y","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Checkbox, FormControl, FormControlLabel, Toolbar } from '@material-ui/core';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        //backgroundColor: 'green',  // Cor de debug\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px'\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n/* \nClasses de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n    3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n\n// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\n\nexport default function KarangosForm() {\n\n    const classes = useStyles()\n\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(),  // Ano corrente\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n\n    // const [currentId, setCurrentId] = useState()\n    const [importadoChecked, setImportadoChecked] = useState()\n\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Karango salvo com sucesso.'\n    })\n\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        marca: '',\n        modelo: '',\n        cor: '',\n        placa: '',\n        preco: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n    const [title, setTitle] = useState('Cadastrar Karango')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n\n        // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\n        // os dados do registro no back-end para edição\n        if (params.id) {\n            setTitle('Editando Karango')\n            getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n            setKarango(response.data)\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados para edição.'\n            })\n        }\n    }\n\n    function handleInputChange(event, property) {\n\n        const karangoTemp = { ...karango }\n        let importadoCheckedTemp = importadoChecked\n\n        // Se houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'importado') {\n            const newState = !importadoChecked\n            //setKarango({ ...karango, importado: (newState ? '1' : '0') })\n            karangoTemp.importado = (newState ? '1' : '0')\n\n            //setImportadoChecked(newState)\n            importadoCheckedTemp = newState\n        }\n        else if (property === 'placa') {\n            //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n            karangoTemp[property] = event.target.value.toUpperCase()\n        }\n        else karangoTemp[property] = event.target.value\n        // Quando o nome de uma propriedade de um objeto aparece entre [],\n        // isso se chama \"propriedade calculada\". O nome da propriedade vai\n        // corresponder à avaliação da expressão entre os colchetes\n        //setCurrentId(event.target.id)\n        //setKarango({ ...karango, [property]: event.target.value })\n        setKarango(karangoTemp)\n        setImportadoChecked(importadoCheckedTemp)\n        setIsModified(true)   // O formulário foi modificado\n        validate(karangoTemp)       // Dispara a validação\n    }\n\n    function validate(data) {\n\n        const errorTemp = {\n            marca: '',\n            modelo: '',\n            cor: '',\n            placa: '',\n            preco: ''\n        }\n        let isValid = true\n\n        // Validação do campo marca\n        if (data.marca.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.marca = 'A marca deve ser preenchida'\n            isValid = false\n        }\n\n        // Validação do campo modelo\n        if (data.modelo.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.modelo = 'A modelo deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo cor\n        if (data.cor.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.cor = 'Escolha uma cor'\n            isValid = false\n        }\n\n        // Validação do campo placa\n        // valor válido não pode ser string vazia e nem conter o caracter _ (sublinhado)\n        if (data.placa.trim() === '' || data.placa.includes('_')) {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\n            isValid = false\n        }\n\n        // Validação do campo preco\n        if (isNaN(data.preco) || Number(data.preco) <= 0) {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\n            isValid = false\n        }\n\n        setError(errorTemp)\n        return isValid\n\n    }\n\n    function years() {\n        let result = []\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n        return result\n    }\n\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\n\n            // Se o registro já existe (edição)\n            if (params.id) {\n                await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n            }\n            // Registro não existe, cria um novo (verbo HTTP POST)\n            else {\n                await axios.post(`https://api.faustocintra.com.br/karangos`, karango)\n            }\n            //alert('Dados salvos com sucesso!')\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Karango salvo com sucesso!'\n            })\n        }\n        catch (error) {\n            //alert('ERRO: ' + error.message)\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'ERRO: ' + error.message\n            })\n        }\n        // Reabilita o botão Enviar\n        setBtnSendState({ disabled: false, label: 'Enviar' })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault()   // Evitar o recarregamento da página\n\n        // Só salva os dados se forem válidos\n        if (validate(karango)) saveData()\n\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        // Evita que a Snackbar seja fechada clicando-se fora dela\n        if (reason === 'clickway') return\n        setSnackState({ ...snackState, open: false })  // Fecha a Snackbar\n\n        // Retorna à página de listagem\n        history.push('/list')\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou em voltar \n        if (result) history.push('/list')\n    }\n\n    function handleGoBack() {\n\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n        if (isModified) setDialogOpen(true)\n\n        // Senão, voltamos diretamente à de listagem\n        else history.push('/list')\n    }\n\n    return (\n        <>\n            <ConfirmDialog\n                isOpen={dialogOpen}\n                onClose={handleDialogClose}>\n                Há dados não salvos. Deseja realmente voltar?\n            </ConfirmDialog>\n\n            <Snackbar\n                open={snackState.open}\n                autoHideDuration={6000}\n                onClose={handleSnackClose}>\n                <Alert\n                    onClose={handleSnackClose}\n                    severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n            <h1>{title}</h1>\n\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <TextField\n                    id=\"marca\"\n                    label=\"Marca\"\n                    variant=\"filled\"\n                    value={karango.marca}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.marca !== ''}\n                    helperText={error.marca}\n                />\n\n                <TextField\n                    id=\"modelo\"\n                    label=\"Modelo\"\n                    variant=\"filled\"\n                    value={karango.modelo}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.modelo !== ''}\n                    helperText={error.modelo}\n                />\n\n                <TextField\n                    id=\"cor\"\n                    label=\"Cor\"\n                    variant=\"filled\"\n                    value={karango.cor}\n                    onChange={event => handleInputChange(event, 'cor')}\n                    select fullWidth\n                    required\n                    error={error.cor !== ''}\n                    helperText={error.cor} >\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n                </TextField>\n\n                <TextField\n                    id=\"ano_fabricacao\"\n                    label=\"Ano de Fabricação\"\n                    variant=\"filled\"\n                    value={karango.ano_fabricacao}\n                    onChange={event => handleInputChange(event, 'ano_fabricacao')}\n                    select fullWidth >\n                    {years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n                </TextField>\n\n                <TextField\n                    id=\"preco\"\n                    label=\"Preço\"\n                    variant=\"filled\"\n                    value={karango.preco}\n                    onChange={handleInputChange}\n                    fullWidth type=\"number\"\n                    onFocus={event => event.target.select()}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                    }}\n                    required\n                    error={error.preco !== ''}\n                    helperText={error.preco}\n                />\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={placaMask}\n                    id=\"placa\"\n                    onChange={event => handleInputChange(event, 'placa')}\n                    value={karango.placa} >\n                    {() => <TextField\n                        label=\"Placa\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.placa !== ''}\n                        helperText={error.placa}\n                    />}\n                </InputMask>\n\n                <FormControl\n                    className={classes.checkbox}\n                    fullWidth >\n                    <FormControlLabel\n                        control={<Checkbox checked={importadoChecked}\n                            onChange={handleInputChange} id=\"importado\" />}\n                        label=\"Importado?\" />\n                </FormControl>\n\n                <Toolbar\n                    className={classes.toolbar} >\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disabled={btnSendState.disabled} >\n\n                        {btnSendState.label}\n\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleGoBack} >\n                        Voltar\n                    </Button>\n                </Toolbar>\n\n                {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}