{"version":3,"sources":["img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","routed/ClienteList.js","routed/ClienteForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logoImg","alt","secondary","toolbar","backgroundColor","background","paper","minHeight","bottom","link","light","FooterBar","Typography","variant","align","fontSize","href","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","justifyContent","paddingRight","margin","KarangosList","history","useHistory","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","columns","field","headerName","headerAlign","flex","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","maxWidth","display","flexWrap","marginBottom","marginTop","checkbox","alignItems","formatChars","KarangosForm","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","snackState","setSnackState","disabled","label","btnSendState","setBtnSendState","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","importadoCheckedTemp","target","newState","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","put","post","Alert","props","handleSnackClose","reason","onSubmit","preventDefault","saveData","TextField","onChange","fullWidth","required","helperText","select","i","years","map","year","type","onFocus","InputProps","startAdornment","InputAdornment","mask","FormControl","FormControlLabel","control","ClienteList","cliente","setCliente","setOpen","setSeverity","setMessage","headerClassName","n1","n2","deleteCliente","ClienteForm","nome","cpf","rg","logradouro","num_imovel","complemento","bairro","municipio","uf","telefone","email","clienteTemp","textfield","toLowerCase","createMuiTheme","main","yellow","pink","box","default","paddingBotton","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9a42d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\n//import Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    menuLink: {\n\n        color: theme.palette.text.primary,\n        textDecoration: 'none'\n    }\n}));\n\nexport default function MainMenu() {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            \n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                <MenuIcon />\n            </IconButton>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/list\" className={classes.menuLink}>Listagem de Karangos</Link>\n                </MenuItem>\n                \n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/new\" className={classes.menuLink}>Cadastrar Novo Karango</Link>\n                \n                </MenuItem>\n                \n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/listCliente\" className={classes.menuLink}>Listagem de Clientes</Link>\n                </MenuItem>\n                \n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/newCliente\" className={classes.menuLink}>Cadastrar Cliente</Link>\n                </MenuItem>\n\n            </Menu>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import Typography from '@material-ui/core/Typography';\n//import IconButton from '@material-ui/core/IconButton';\n//import MenuIcon from '@material-ui/icons/Menu';\nimport logoImg from '../img/karangos.png'\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  logo: {\n    width: '300px'\n  }\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar >\n          {/*<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>*/}\n            <MainMenu/>\n            <img src={logoImg} className={classes.logo} alt=\"Logotipo Karangos\"/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import { Typography } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        //backgroundColor: 'yellow',\n        width: '100%',\n        color: theme.palette.text.secondary\n    },\n    toolbar: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '40px',\n        // Posicionando a barra no rodapé da página\n        width: '100%',\n        position: 'fixed',\n        bottom: 0\n    },\n    link: {\n        color: theme.palette.secondary.light,\n        textDecoration: 'none',         // tira o sublinhado do link\n        '&:hover': {                    // mouse passando sobre o link\n            textDecoration: 'underline' // retorna o sublinhado\n        }\n    }\n}));\n\nexport default function FooterBar() {\n    const classes = useStyles();\n    return (\n        <Toolbar className={classes.toolbar}>\n            <Typography variant=\"caption\" align=\"center\" className={classes.text}>\n                Desenvolvido com <LocalCafeTwoToneIcon fontSize=\"small\"/> por<a href=\"mailto:professor@faustocintra.com.br\" className={classes.link}>Prof. Fausto Cintra</a>\n            </Typography>\n        </Toolbar>\n    )\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ConfirmDialog({ title = 'Alerta', isOpen = false, onClose, children }) {\n  /*\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  */\n\n  const handleClose = (result) => {\n    // Só chama a função onClose se a prop correspondente tiver sido passada\n    if (onClose) onClose(result);\n  };\n\n  return (\n    <div>\n      {/*<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>*/}\n      <Dialog\n        open={isOpen}\n        onClose={() => handleClose(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n           {children}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(true)} color=\"primary\">\n            Ok\n          </Button>\n          <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\n            Cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  dataGrid: {\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\n      visibility: 'hidden'\n    },\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n      visibility: 'visible'\n    }\n  },\n  toolbar: {\n    justifyContent: 'flex-end',\n    paddingRight: 0,\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nexport default function KarangosList() {\n  const classes = useStyles()\n\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n\n  const history = useHistory()\n\n  const [karangos, setKarangos] = useState([])\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n  const [sbOpen, setSbOpen] = useState(false)\n  const [sbSeverity, setSbSeverity] = useState('success')\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n\n  useEffect(() => {\n    getData()\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n  // é executado apenas uma vez, no carregamento inicial do componente\n\n  async function getData() {\n    try { // tenta buscar os dados\n      let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\n      if (response.data.length > 0) setKarangos(response.data)\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  async function deleteItem() {\n    try {\n      await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\n      getData()     // Atualiza os dados da tabela\n      setSbSeverity('success')\n      setSbMessage('Exclusão efetuada com sucesso.')\n    }\n    catch (error) {\n      setSbSeverity('error')\n      setSbMessage('ERRO: ' + error.message)\n    }\n    setSbOpen(true)   // Exibe a snackbar\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou com a exclusão \n    if (result) deleteItem()\n  }\n\n  function handleDelete(id) {\n    setDeletable(id)\n    setDialogOpen(true)\n  }\n\n  function handleSbClose() {\n    setSbOpen(false)    // Fecha a snackbar\n  }\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'Cód.',\n      align: 'right',\n      headerAlign: 'right',\n      flex: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    {\n      field: 'marca',\n      headerName: 'Marca',\n      flex: true\n    },\n    {\n      field: 'modelo',\n      headerName: 'Modelo',\n      flex: true\n    },\n    {\n      field: 'cor',\n      headerName: 'Cor',\n      align: 'left',\n      headerAlign: 'center',\n      flex: true\n    },\n    {\n      field: 'ano_fabricacao',\n      headerName: 'Ano',\n      align: 'left',\n      headerAlign: 'center',\n      flex: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    {\n      field: 'importado',\n      headerName: 'Importado?',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      renderCell: params => (\n        <Checkbox checked={params.value === \"1\"} readOnly />\n      )\n    },\n    {\n      field: 'placa',\n      headerName: 'Placa',\n      align: 'left',\n      headerAlign: 'center',\n      flex: true\n    },\n    {\n      field: 'preco',\n      headerName: 'Preço',\n      align: 'left',\n      headerAlign: 'center',\n      flex: true,\n      valueFormatter: params => (\n        Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\n      ),\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    {\n      field: 'editar',\n      headerName: 'Editar',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\n          <EditIcon />\n        </IconButton>\n      )\n    },\n    {\n      field: 'excluir',\n      headerName: 'Excluir',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      )\n    },\n  ];\n\n  return (\n    <>\n      <ConfirmDialog\n        isOpen={dialogOpen}\n        onClose={handleDialogClose}>\n        Deseja realmente excluir este karango?\n      </ConfirmDialog>\n\n      <Snackbar\n        open={sbOpen}\n        autoHideDuration={6000}\n        onClose={handleSbClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSbClose}\n          severity={sbSeverity}>\n          {sbMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      <h1>Registro de Karangos</h1>\n      <Toolbar\n        className={classes.toolbar}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"large\"\n          startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\n          Novo Karango\n        </Button>\n      </Toolbar>\n      <Paper\n        elevation={4}>\n        <DataGrid\n          className={classes.dataGrid}\n          rows={karangos}\n          columns={columns}\n          pageSize={5}\n          autoHeight={true}\n          disableSelectionOnClick={true} />\n      </Paper>\n    </>\n  )\n}","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Checkbox, FormControl, FormControlLabel, Toolbar } from '@material-ui/core';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        //backgroundColor: 'green',  // Cor de debug\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px'\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n/* \nClasses de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n    3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n\n// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\n\nexport default function KarangosForm() {\n\n    const classes = useStyles()\n\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(),  // Ano corrente\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n\n    // const [currentId, setCurrentId] = useState()\n    const [importadoChecked, setImportadoChecked] = useState()\n\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Karango salvo com sucesso.'\n    })\n\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        marca: '',\n        modelo: '',\n        cor: '',\n        placa: '',\n        preco: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n    const [title, setTitle] = useState('Cadastrar Karango')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n\n        // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\n        // os dados do registro no back-end para edição\n        if (params.id) {\n            setTitle('Editando Karango')\n            getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n            setKarango(response.data)\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados para edição.'\n            })\n        }\n    }\n\n    function handleInputChange(event, property) {\n\n        const karangoTemp = { ...karango }\n        let importadoCheckedTemp = importadoChecked\n\n        // Se houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'importado') {\n            const newState = !importadoChecked\n            //setKarango({ ...karango, importado: (newState ? '1' : '0') })\n            karangoTemp.importado = (newState ? '1' : '0')\n\n            //setImportadoChecked(newState)\n            importadoCheckedTemp = newState\n        }\n        else if (property === 'placa') {\n            //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n            karangoTemp[property] = event.target.value.toUpperCase()\n        }\n        else karangoTemp[property] = event.target.value\n        // Quando o nome de uma propriedade de um objeto aparece entre [],\n        // isso se chama \"propriedade calculada\". O nome da propriedade vai\n        // corresponder à avaliação da expressão entre os colchetes\n        //setCurrentId(event.target.id)\n        //setKarango({ ...karango, [property]: event.target.value })\n        setKarango(karangoTemp)\n        setImportadoChecked(importadoCheckedTemp)\n        setIsModified(true)   // O formulário foi modificado\n        validate(karangoTemp)       // Dispara a validação\n    }\n\n    function validate(data) {\n\n        const errorTemp = {\n            marca: '',\n            modelo: '',\n            cor: '',\n            placa: '',\n            preco: ''\n        }\n        let isValid = true\n\n        // Validação do campo marca\n        if (data.marca.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.marca = 'A marca deve ser preenchida'\n            isValid = false\n        }\n\n        // Validação do campo modelo\n        if (data.modelo.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.modelo = 'A modelo deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo cor\n        if (data.cor.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.cor = 'Escolha uma cor'\n            isValid = false\n        }\n\n        // Validação do campo placa\n        // valor válido não pode ser string vazia e nem conter o caracter _ (sublinhado)\n        if (data.placa.trim() === '' || data.placa.includes('_')) {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\n            isValid = false\n        }\n\n        // Validação do campo preco\n        if (isNaN(data.preco) || Number(data.preco) <= 0) {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\n            isValid = false\n        }\n\n        setError(errorTemp)\n        return isValid\n\n    }\n\n    function years() {\n        let result = []\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n        return result\n    }\n\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\n\n            // Se o registro já existe (edição)\n            if (params.id) {\n                await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n            }\n            // Registro não existe, cria um novo (verbo HTTP POST)\n            else {\n                await axios.post(`https://api.faustocintra.com.br/karangos`, karango)\n            }\n            //alert('Dados salvos com sucesso!')\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Karango salvo com sucesso!'\n            })\n        }\n        catch (error) {\n            //alert('ERRO: ' + error.message)\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'ERRO: ' + error.message\n            })\n        }\n        // Reabilita o botão Enviar\n        setBtnSendState({ disabled: false, label: 'Enviar' })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault()   // Evitar o recarregamento da página\n\n        // Só salva os dados se forem válidos\n        if (validate(karango)) saveData()\n\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        // Evita que a Snackbar seja fechada clicando-se fora dela\n        if (reason === 'clickway') return\n        setSnackState({ ...snackState, open: false })  // Fecha a Snackbar\n\n        // Retorna à página de listagem\n        history.push('/list')\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou em voltar \n        if (result) history.push('/list')\n    }\n\n    function handleGoBack() {\n\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n        if (isModified) setDialogOpen(true)\n\n        // Senão, voltamos diretamente à de listagem\n        else history.push('/list')\n    }\n\n    return (\n        <>\n            <ConfirmDialog\n                isOpen={dialogOpen}\n                onClose={handleDialogClose}>\n                Há dados não salvos. Deseja realmente voltar?\n            </ConfirmDialog>\n\n            <Snackbar\n                open={snackState.open}\n                autoHideDuration={6000}\n                onClose={handleSnackClose}>\n                <Alert\n                    onClose={handleSnackClose}\n                    severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n            <h1>{title}</h1>\n\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <TextField\n                    id=\"marca\"\n                    label=\"Marca\"\n                    variant=\"filled\"\n                    value={karango.marca}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.marca !== ''}\n                    helperText={error.marca}\n                />\n\n                <TextField\n                    id=\"modelo\"\n                    label=\"Modelo\"\n                    variant=\"filled\"\n                    value={karango.modelo}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.modelo !== ''}\n                    helperText={error.modelo}\n                />\n\n                <TextField\n                    id=\"cor\"\n                    label=\"Cor\"\n                    variant=\"filled\"\n                    value={karango.cor}\n                    onChange={event => handleInputChange(event, 'cor')}\n                    select fullWidth\n                    required\n                    error={error.cor !== ''}\n                    helperText={error.cor} >\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n                </TextField>\n\n                <TextField\n                    id=\"ano_fabricacao\"\n                    label=\"Ano de Fabricação\"\n                    variant=\"filled\"\n                    value={karango.ano_fabricacao}\n                    onChange={event => handleInputChange(event, 'ano_fabricacao')}\n                    select fullWidth >\n                    {years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n                </TextField>\n\n                <TextField\n                    id=\"preco\"\n                    label=\"Preço\"\n                    variant=\"filled\"\n                    value={karango.preco}\n                    onChange={handleInputChange}\n                    fullWidth type=\"number\"\n                    onFocus={event => event.target.select()}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                    }}\n                    required\n                    error={error.preco !== ''}\n                    helperText={error.preco}\n                />\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={placaMask}\n                    id=\"placa\"\n                    onChange={event => handleInputChange(event, 'placa')}\n                    value={karango.placa} >\n                    {() => <TextField\n                        label=\"Placa\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.placa !== ''}\n                        helperText={error.placa}\n                    />}\n                </InputMask>\n\n                <FormControl\n                    className={classes.checkbox}\n                    fullWidth >\n                    <FormControlLabel\n                        control={<Checkbox checked={importadoChecked}\n                            onChange={handleInputChange} id=\"importado\" />}\n                        label=\"Importado?\" />\n                </FormControl>\n\n                <Toolbar\n                    className={classes.toolbar} >\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disabled={btnSendState.disabled} >\n\n                        {btnSendState.label}\n\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleGoBack} >\n                        Voltar\n                    </Button>\n                </Toolbar>\n\n                {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\n            </form>\n        </>\n    )\n}\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ConfirmDialog from '../ui/ConfirmDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { DataGrid, GridColDef } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    dataGrid: {\r\n        // Esconde os botões \r\n        '& .MuiDataGrid-row button': {\r\n            visibility: 'hidden',\r\n        },\r\n\r\n        // Exibir os botões quando o mouse passar por cima\r\n        '& .MuiDataGrid-row:hover button': {\r\n            visibility: 'visible'\r\n        },\r\n\r\n    },\r\n    toolbar: {\r\n        justifyContent: 'flex-end',\r\n        paddingRight: 0,\r\n        margin: theme.spacing(2, 0)\r\n    },\r\n\r\n}));\r\n\r\nexport default function ClienteList() {\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory()\r\n\r\n    const [cliente, setCliente] = useState([])\r\n    const [deletable, setDeletable] = useState()\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [severity, setSeverity] = useState('SUCESSO')\r\n    const [message, setMessage] = useState('CLIENTE EXCLUÍDO')\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    async function getData() {\r\n        try {\r\n            let response = await axios.get('https://api.faustocintra.com.br/clientes?by=nome,cpf')\r\n            if (response.data.length > 0) setCliente(response.data)\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async function deleteCliente() {\r\n        try {\r\n            await axios.delete(`https://api.faustocintra.com.br/clientes/${deletable}`)\r\n            getData()\r\n            setSeverity('SUCESSO')\r\n            setMessage('CLIENTE EXCLUÍDO')\r\n        }\r\n        catch (error) {\r\n            setSeverity('error')\r\n            setMessage('ERRO: ' + error.message)\r\n        }\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleDialogClose(result) {\r\n        setDialogOpen(false)\r\n\r\n        //  Exclusão pelo usuário\r\n        if (result) deleteCliente()\r\n    }\r\n\r\n    function handleDeleteClick(id) {\r\n        setDeletable(id)\r\n        setDialogOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    const columns: GridColDef[] = [\r\n        {\r\n            field: 'id',\r\n            headerClassName: 'super-app-theme--header',\r\n            headerName: 'ID',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 90,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'nome',\r\n            headerName: 'Nome',\r\n            align: 'left',\r\n            headerAlign: 'left',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'cpf',\r\n            headerName: 'CPF',\r\n            align: 'left',\r\n            headerAlign: 'left',\r\n            width: 125,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'rg',\r\n            headerName: 'RG',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 125,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'logradouro',\r\n            headerName: 'Logradouro',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'num_imovel',\r\n            headerName: 'Nº Imóvel',\r\n            width: 90,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'complemento',\r\n            headerName: 'Complemento',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'bairro',\r\n            headerName: 'Bairro',\r\n            width: 120,\r\n        },\r\n        {\r\n            field: 'municipio',\r\n            headerName: 'Município',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'uf',\r\n            headerName: 'UF',\r\n            width: 100,\r\n        },\r\n        {\r\n            field: 'telefone',\r\n            headerName: 'Telefone',\r\n            width: 150,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'E-mail',\r\n            width: 260,\r\n        },\r\n        {\r\n            field: 'editar',\r\n            headerName: 'Editar',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 150,\r\n            renderCell: params => (\r\n                <IconButton aria-label=\"editar\" onClick={() => history.push(`/editCliente/${params.id}`)}>\r\n                    <EditIcon />\r\n                </IconButton>\r\n            )\r\n        },\r\n        {\r\n            field: 'excluir',\r\n            headerName: 'Excluir',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 120,\r\n            renderCell: params => (\r\n                <IconButton aria-label=\"excluir\" onClick={() => handleDeleteClick(params.id)}>\r\n                    <DeleteIcon color=\"error\" />\r\n                </IconButton>\r\n            )\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <ConfirmDialog\r\n                isOpen={dialogOpen}\r\n                onClose={handleDialogClose}>\r\n                Deseja excluir cliente?\r\n            </ConfirmDialog>\r\n\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}>\r\n                <MuiAlert\r\n                    elevation={6}\r\n                    variant=\"filled\"\r\n                    onClose={handleClose}\r\n                    severity={severity}>\r\n                    {message}\r\n                </MuiAlert>\r\n            </Snackbar>\r\n\r\n            <h1>Cadastro de Cliente</h1>\r\n\r\n            <Toolbar\r\n                className={classes.toolbar}>\r\n                <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    startIcon={<AddBoxIcon />}\r\n                    onClick={() => history.push(\"/newCliente\")}>\r\n                    Novo Cliente\r\n                </Button>\r\n            </Toolbar>\r\n\r\n            <Paper\r\n                elevation={5} >\r\n                <DataGrid\r\n                    className={classes.dataGrid}\r\n                    rows={cliente}\r\n                    columns={columns}\r\n                    pageSize={4}\r\n                    autoHeight={true}\r\n                    disableSelectionOnClick={true} />\r\n            </Paper>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputMask from 'react-input-mask';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Toolbar from '@material-ui/core/Toolbar'\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px'\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\nconst formatChars = {\n    'x': '[0-9]',\n}\n\nconst mascaraCPF = 'xxx.xxx.xxx-xx'\nconst mascaraRG = 'xx.xxx.xxx-x'\nconst mascaraTelefone = '(xx)-xxxx-xxxx'\n\nexport default function ClienteForm() {\n\n    const classes = useStyles()\n\n    const [cliente, setCliente] = useState({\n        id: null,\n        nome: '',\n        cpf: '',\n        rg: '',\n        logradouro: '',\n        num_imovel: '',\n        complemento: '',\n        bairro: '',\n        municipio: '',\n        uf: '',\n        telefone: '',\n        email: '',\n    })\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'SUCESSO',\n        message: 'CLIENTE SALVO'\n    })\n\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        nome: '',\n        cpf: '',\n        rg: '',\n        logradouro: '',\n        num_imovel: '',\n        complemento: '',\n        bairro: '',\n        municipio: '',\n        uf: '',\n        telefone: '',\n        email: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const [title, setTitle] = useState('Cadastro Cliente')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n\n        // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\n        // os dados do registro no back-end para edição\n        if (params.id) {\n            setTitle('Editando Cliente')\n            getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`)\n            setCliente(response.data)\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados'\n            })\n        }\n    }\n    function handleInputChange(event, property) {\n\n        const clienteTemp = { ...cliente }\n\n        if (event.target.id) property = event.target.id\n\n        if ((property === 'cpf') || (property === 'rg') || (property === 'complemento') || (property === 'uf') || (property === 'telefone')) {\n            clienteTemp[property] = event.target.value\n        }\n\n        else clienteTemp[property] = event.target.value\n\n        setCliente(clienteTemp)\n        setIsModified(true)\n        validate(clienteTemp)\n    }\n\n    // validação dos campos\n    function validate(data) {\n        const errorTemp = {\n            nome: '',\n            cpf: '',\n            rg: '',\n            logradouro: '',\n            num_imovel: '',\n            complemento: '',\n            bairro: '',\n            municipio: '',\n            uf: '',\n            telefone: '',\n            email: ''\n        }\n        let isValid = true\n\n        // Validar nome\n        if (data.nome.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.nome = 'Digitar um Nome válido'\n            isValid = false\n        }\n\n        // Validar cpf\n        if (data.cpf.trim() === '' || data.cpf.includes('_')) {\n            errorTemp.cpf = 'Digitar um CPF válido'\n            isValid = false\n        }\n\n        // Validar rg\n        if (data.rg.trim() === '' || data.rg.includes('_')) {\n            errorTemp.rg = 'Digitar um RG válido'\n            isValid = false\n        }\n\n        // Validar logradouro\n        if (data.logradouro.trim() === '') {\n            errorTemp.logradouro = 'Escolha um Logradouro'\n            isValid = false\n        }\n\n        // Validar complemento\n        if (data.complemento.trim() === '') {\n            errorTemp.complemento = 'Digitar um valor válido'\n            isValid = false\n        }\n\n        // Validar bairro\n        if (data.bairro.trim() === '') {\n            errorTemp.bairro = 'Digitar um valor válido'\n            isValid = false\n        }\n\n        // Validar município\n        if (data.municipio.trim() === '') {\n            errorTemp.municipio = 'Digitar um valor válido'\n            isValid = false\n        }\n\n        // Validar uf\n        if (data.uf.trim() === '') {\n            errorTemp.uf = 'Escolha um UF'\n            isValid = false\n        }\n\n        // Validar telefone\n        if (data.telefone.trim() === '') {\n            errorTemp.telefone = 'Digitar um telefone válido'\n            isValid = false\n        }\n        // Validar Número\n        if (Number(data.num_imovel) <= 0) {\n            errorTemp.num_imovel = 'Digitar um valor válido'\n            isValid = false\n        }\n        // Validar email\n        if (data.email.length <= 5 || data.email.trim() === '' || !data.email.includes('@')) {\n            errorTemp.email = 'O e-mail deve ser preenchido corretemente'\n            isValid = false\n        }\n\n        setError(errorTemp)\n        return isValid\n    }\n\n\n    //Salvar dados do Cliente\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\n\n            // Se o registro já existe (edição)\n            if (params.id) {\n                await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, cliente)\n            }\n            // Registro não existe, cria um novo (verbo HTTP POST)\n            else {\n                await axios.post(`https://api.faustocintra.com.br/clientes`, cliente)\n            }\n            //alert('Dados salvos com sucesso!')\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Cliente salvo com sucesso!'\n            })\n            // A FAZER: retornar à página de listagem\n        }\n        catch (error) {\n\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'ERRO: ' + error.message\n            })\n        }\n        // Retoma botão Enviar\n        setBtnSendState({ disabled: false, label: 'Enviar' })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault()   // Segura o recarregamento da página\n        if (validate(cliente)) saveData()\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n\n        if (reason === 'clickway') return // Evita que Snackbar feche\n        setSnackState({ ...snackState, open: false })  // Fecha a Snackbar\n        history.push('/listCliente') // Retorna a paginação\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n        if (result) history.push('/listCliente') // voltar\n    }\n\n    function handleGoBack() {\n        if (isModified) setDialogOpen(true) // Mostrar diálogo de confirmação\n        else history.push('/listCliente') // Voltar\n    }\n\n    return (\n        <>\n            <ConfirmDialog\n                isOpen={dialogOpen}\n                onClose={handleDialogClose}>\n                Deseja sair desta página ?\n            </ConfirmDialog>\n\n            <Snackbar\n                open={snackState.open}\n                autoHideDuration={6000}\n                onClose={handleSnackClose}>\n                <Alert\n                    onClose={handleSnackClose}\n                    severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n            <h1>{title}</h1>\n\n            <form className={classes.form} onSubmit={handleSubmit} >\n\n                <TextField\n                    className={classes.textfield}\n                    id=\"nome\"\n                    label=\"Nome\"\n                    variant=\"filled\"\n                    value={cliente.nome}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.nome !== ''}\n                    helperText={error.nome} />\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={mascaraCPF}\n                    id=\"cpf\"\n                    value={cliente.cpf}\n                    onChange={event => handleInputChange(event, 'cpf')}>\n                    {() => <TextField\n                        className={classes.textfield}\n                        label=\"CPF\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.cpf !== ''}\n                        helperText={error.cpf} />}\n                </InputMask>\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={mascaraRG}\n                    id=\"rg\"\n                    value={cliente.rg}\n                    onChange={event => handleInputChange(event, 'rg')}>\n                    {() => <TextField\n                        className={classes.textfield}\n                        label=\"RG\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.rg !== ''}\n                        helperText={error.rg} />}\n                </InputMask>\n\n                <TextField\n                    className={classes.textfield}\n                    id=\"logradouro\"\n                    label=\"Logradouro\"\n                    variant=\"filled\"\n                    value={cliente.logradouro}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.logradouro !== ''}\n                    helperText={error.logradouro} />\n\n                <TextField\n                    className={classes.textfield}\n                    id=\"num_imovel\"\n                    label=\"Número Imóvel\"\n                    variant=\"filled\"\n                    value={cliente.num_imovel}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.num_imovel !== ''}\n                    helperText={error.num_imovel} />\n\n                <TextField\n                    className={classes.textfield}\n                    id=\"complemento\"\n                    label=\"Complemento\"\n                    variant=\"filled\"\n                    value={cliente.complemento}\n                    onChange={handleInputChange}\n                    fullWidth  \n                    required\n                    error={error.complemento !== ''}\n                    helperText={error.complemento} >\n\n                </TextField>\n\n                <TextField\n                    className={classes.textfield}\n                    id=\"bairro\"\n                    label=\"Bairro\"\n                    variant=\"filled\"\n                    value={cliente.bairro}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.bairro !== ''}\n                    helperText={error.bairro} />\n\n                <TextField\n                    className={classes.textfield}\n                    id=\"municipio\"\n                    label=\"Município\"\n                    variant=\"filled\"\n                    value={cliente.municipio}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.municipio !== ''}\n                    helperText={error.municipio} />\n\n                <TextField\n                    className={classes.textfield}\n                    id=\"uf\"\n                    label=\"UF\"\n                    variant=\"filled\"\n                    value={cliente.uf}\n                    onChange={event => handleInputChange(event, 'uf')}\n                    select fullWidth\n                    required\n                    error={error.uf !== ''}\n                    helperText={error.uf} >\n                    <MenuItem value=\"Acre\">Acre</MenuItem>\n                    <MenuItem value=\"Alagoas\">Alagoas</MenuItem>\n                    <MenuItem value=\"Amapá\">Amapá</MenuItem>\n                    <MenuItem value=\"Amazonas\">Amazonas</MenuItem>\n                    <MenuItem value=\"Bahia\">Bahia</MenuItem>\n                    <MenuItem value=\"Ceará\">Ceará</MenuItem>\n                    <MenuItem value=\"Distrito Federal\">Distrito Federal</MenuItem>\n                    <MenuItem value=\"Espírito Santo\">Espírito Santo</MenuItem>\n                    <MenuItem value=\"Goiás\">Goiás</MenuItem>\n                    <MenuItem value=\"Maranhão\">Maranhão</MenuItem>\n                    <MenuItem value=\"Mato Grosso\">Mato Grosso</MenuItem>\n                    <MenuItem value=\"Mato Grosso do Sul\">Mato Grosso do Sul</MenuItem>\n                    <MenuItem value=\"Minas Gerais\">Minas Gerais</MenuItem>\n                    <MenuItem value=\"Pará\">Pará</MenuItem>\n                    <MenuItem value=\"Paraíba\">Paraíba</MenuItem>\n                    <MenuItem value=\"Paraná\">Paraná</MenuItem>\n                    <MenuItem value=\"Pernambuco\">Pernambuco</MenuItem>\n                    <MenuItem value=\"Piauí\">Piauí</MenuItem>\n                    <MenuItem value=\"Rio de Janeiro\">Rio de Janeiro</MenuItem>\n                    <MenuItem value=\"Rio Grande do Norte\">Rio Grande do Norte</MenuItem>\n                    <MenuItem value=\"Rio Grande do Sul\">Rio Grande do Sul</MenuItem>\n                    <MenuItem value=\"Rondônia\">Rondônia</MenuItem>\n                    <MenuItem value=\"Roraima\">Roraima</MenuItem>\n                    <MenuItem value=\"Santa Catarina\">Santa Catarina</MenuItem>\n                    <MenuItem value=\"São Paulo\">São Paulo</MenuItem>\n                    <MenuItem value=\"Sergipe\">Sergipe</MenuItem>\n                    <MenuItem value=\"Tocantins\">Tocantins</MenuItem>\n                </TextField>\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={mascaraTelefone}\n                    id=\"telefone\"\n                    value={cliente.telefone}\n                    onChange={event => handleInputChange(event, 'telefone')}>\n                    {() => <TextField\n                        className={classes.textfield}\n                        label=\"Telefone\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.telefone !== ''}\n                        helperText={error.telefone} />}\n                </InputMask>\n\n                <TextField\n                    className={classes.textfield}\n                    id=\"email\"\n                    label=\"E-mail\"\n                    variant=\"filled\"\n                    value={cliente.email.toLowerCase()}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.email !== ''}\n                    helperText={error.email} />\n                <Toolbar\n                    className={classes.toolbar} >\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disabled={btnSendState.disabled} >\n\n                        {btnSendState.label}\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleGoBack} >\n                        Voltar\n                    </Button>\n                </Toolbar>\n            </form>\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","//import logo from './logo.svg';\n//import './App.css';\n//import Button from '@material-ui/core/Button'\nimport TopBar from './ui/TopBar'\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport yellow from '@material-ui/core/colors/yellow';\nimport pink from '@material-ui/core/colors/pink';\nimport FooterBar from './ui/FooterBar';\nimport { Box } from '@material-ui/core';\n//import MainMenu from './ui/MainMenu';\nimport KarangosList from './routed/KarangosList2';\nimport KarangosForm from './routed/KarangosForm';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ClienteList from './routed/ClienteList';\nimport ClienteForm from './routed/ClienteForm';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: yellow[500],\n    },\n    secondary: {\n      main: pink[500],\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: theme.palette.background.default,\n    minHeight: '100vh',   // 100% da altura da área visível\n    paddingBotton: '42px' // Para que o conteúdo não fique escondido atrás do footer\n  },\n  routed: {\n    padding: '25px',\n    color: theme.palette.text.primary,\n    fontFamily: theme.typography.fontFamily\n  }\n}));\n\nfunction Main() {\n  const classes = useStyles();\n  return (\n    <Box className={classes.box}>\n      <BrowserRouter>\n        <TopBar />\n        <Box id=\"routed\" className={classes.routed}>\n          <Switch>\n            <Route path=\"/list\">\n              <KarangosList />\n            </Route>\n            <Route path=\"/new\">\n              <KarangosForm />\n            </Route>\n            {/* :id é um parâmetro ( nomes de Parâmetros começam com dois pontos ) */}\n            <Route path=\"/edit/:id\">\n              <KarangosForm />\n            </Route>\n            <Route path=\"/listCliente\">\n              <ClienteList />\n            </Route>\n            <Route path=\"/newCliente\">\n              <ClienteForm />\n            </Route>\n            <Route path=\"/editCliente/:id\">\n              <ClienteForm />\n            </Route>\n          </Switch>\n        </Box>\n        <FooterBar />\n      </BrowserRouter>\n    </Box>\n  )\n}\n\nfunction App() {\n  return (\n    /*<div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Projeto Karangos</h1>\n        <Button variant=\"contained\" color=\"primary\">Click Aqui</Button>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Learn React</a>\n      </header>\n    </div>*/\n    <div>\n      <ThemeProvider theme={theme}>\n        <Main />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}